[{"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\index.tsx":"1","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\App.tsx":"3","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\store.tsx":"4","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\RestaurantPage\\RestaurantPage.tsx":"5","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\OneRest\\OneRest.tsx":"6","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignInPage\\SignInPage.tsx":"7","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ChefPage\\ChefPage.tsx":"8","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignUpPage\\SignUpPage.tsx":"9","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\HomePage\\HomePage.tsx":"10","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\OneChef\\OneChef.tsx":"11","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\CheckOut\\CheckOut.tsx":"12","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\chefSlice.tsx":"13","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\restaurantsSlice.tsx":"14","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\dishesSlice.tsx":"15","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\CheckOut\\CheckOutDetails.tsx":"16","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\OpenClose\\OpenClose.ts":"17","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\RangeBar\\RangeBar.tsx":"18","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\Footer\\Footer.tsx":"19","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\NavBar\\NavBar.tsx":"20","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\RestaurantFilterBar\\RestaurantFilterBar.tsx":"21","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\PopularRestaurants\\RestaurantCard.tsx":"22","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\RestaurantCardsPage\\RestaurantCardsPage.tsx":"23","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\PopularRestaurants\\PopularRestaurants.tsx":"24","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignatureDish\\SignatureDish.tsx":"25","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignIn\\SignIn.tsx":"26","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignatureDish\\DishCard.tsx":"27","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ChefPageFilter\\ChefPageFilter.tsx":"28","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ImageCard\\ImageCard.tsx":"29","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\AboutUs\\AboutUs.tsx":"30","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignUp\\SignUp.tsx":"31","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ChefOfTheWeek\\ChefOfTheWeek.tsx":"32","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\Hero\\Hero.tsx":"33","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\IconMenu\\IconMenu.tsx":"34","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\YourOrder\\YourOrderSubmit.tsx":"35","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\NavBar\\NavBarRight.tsx":"36","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\NavBar\\NavBarLeft.tsx":"37","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ChefOfTheWeek\\ChefCard.tsx":"38","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\NavBar\\NavBarMobile\\NavBarMobile.tsx":"39","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ModalRestaurant\\ModalRest.tsx":"40","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\DishOrder\\DishOrder.tsx":"41","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ModalOrder\\ModalOrder.tsx":"42","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\YourOrder\\YourOrder.tsx":"43","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\DishModalOrder\\DishModalOrder.tsx":"44","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\usersSlice.tsx":"45","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\activeUsers.tsx":"46","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\AddRest\\AddRest.tsx":"47","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\AddDIsh\\AddDish.tsx":"48","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\AddChef\\AddChef.tsx":"49"},{"size":682,"mtime":1678872678467,"results":"50","hashOfConfig":"51"},{"size":440,"mtime":1678872678469,"results":"52","hashOfConfig":"51"},{"size":1399,"mtime":1678872678019,"results":"53","hashOfConfig":"51"},{"size":1002,"mtime":1678901616325,"results":"54","hashOfConfig":"51"},{"size":1607,"mtime":1678872678438,"results":"55","hashOfConfig":"51"},{"size":4131,"mtime":1678898491680,"results":"56","hashOfConfig":"51"},{"size":320,"mtime":1678872678438,"results":"57","hashOfConfig":"51"},{"size":1651,"mtime":1678898409055,"results":"58","hashOfConfig":"51"},{"size":320,"mtime":1678872678438,"results":"59","hashOfConfig":"51"},{"size":683,"mtime":1678872678184,"results":"60","hashOfConfig":"51"},{"size":3585,"mtime":1678872678203,"results":"61","hashOfConfig":"51"},{"size":470,"mtime":1678901424216,"results":"62","hashOfConfig":"51"},{"size":1115,"mtime":1678872678473,"results":"63","hashOfConfig":"51"},{"size":1450,"mtime":1678872678474,"results":"64","hashOfConfig":"51"},{"size":1950,"mtime":1678872678473,"results":"65","hashOfConfig":"51"},{"size":1626,"mtime":1678872678136,"results":"66","hashOfConfig":"51"},{"size":688,"mtime":1678872678212,"results":"67","hashOfConfig":"51"},{"size":460,"mtime":1678872678438,"results":"68","hashOfConfig":"51"},{"size":368,"mtime":1678872678149,"results":"69","hashOfConfig":"51"},{"size":1563,"mtime":1678902293960,"results":"70","hashOfConfig":"51"},{"size":2993,"mtime":1678872678438,"results":"71","hashOfConfig":"51"},{"size":1193,"mtime":1678901530788,"results":"72","hashOfConfig":"51"},{"size":977,"mtime":1678872678438,"results":"73","hashOfConfig":"51"},{"size":1769,"mtime":1678872678386,"results":"74","hashOfConfig":"51"},{"size":1130,"mtime":1678872678455,"results":"75","hashOfConfig":"51"},{"size":2611,"mtime":1678872678438,"results":"76","hashOfConfig":"51"},{"size":2048,"mtime":1678898790425,"results":"77","hashOfConfig":"51"},{"size":1358,"mtime":1678872678140,"results":"78","hashOfConfig":"51"},{"size":521,"mtime":1678872678184,"results":"79","hashOfConfig":"51"},{"size":1423,"mtime":1678901339316,"results":"80","hashOfConfig":"51"},{"size":2793,"mtime":1678901559231,"results":"81","hashOfConfig":"51"},{"size":1025,"mtime":1678901437842,"results":"82","hashOfConfig":"51"},{"size":438,"mtime":1678872678152,"results":"83","hashOfConfig":"51"},{"size":900,"mtime":1678901499518,"results":"84","hashOfConfig":"51"},{"size":3472,"mtime":1678983714043,"results":"85","hashOfConfig":"51"},{"size":1545,"mtime":1678872678201,"results":"86","hashOfConfig":"51"},{"size":1269,"mtime":1678872678196,"results":"87","hashOfConfig":"51"},{"size":1760,"mtime":1678872678136,"results":"88","hashOfConfig":"51"},{"size":1383,"mtime":1678872678196,"results":"89","hashOfConfig":"51"},{"size":4485,"mtime":1678988350868,"results":"90","hashOfConfig":"51"},{"size":1332,"mtime":1678901468375,"results":"91","hashOfConfig":"51"},{"size":2742,"mtime":1678986135646,"results":"92","hashOfConfig":"51"},{"size":2662,"mtime":1678983659423,"results":"93","hashOfConfig":"51"},{"size":604,"mtime":1678901449713,"results":"94","hashOfConfig":"51"},{"size":1047,"mtime":1678901593307,"results":"95","hashOfConfig":"51"},{"size":999,"mtime":1678872678472,"results":"96","hashOfConfig":"51"},{"size":6431,"mtime":1678901414568,"results":"97","hashOfConfig":"51"},{"size":3960,"mtime":1678901347483,"results":"98","hashOfConfig":"51"},{"size":3742,"mtime":1678901578624,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"ybui5",{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"103"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"103"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"103"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"103"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"103"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"103"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"103"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"103"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"103"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"103"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"103"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"103"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"103"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"103"},"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\App.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\store.tsx",["265"],[],"import { configureStore } from '@reduxjs/toolkit';\r\nimport chefReducer from './slices/chefSlice';\r\nimport restaurantsReducer from './slices/restaurantsSlice';\r\nimport userReducer from './slices/usersSlice';\r\nimport activeUsersReducer from './slices/activeUsers';\r\nimport dishesReducer from './slices/dishesSlice';\r\nimport { IChefState } from '../components/ChefPage/ChefPage';\r\nimport { IDishes } from '../components/SignatureDish/DishCard';\r\nimport { IrestaurantsState } from '../components/RestaurantPage/RestaurantPage';\r\nimport { IUser } from './slices/usersSlice';\r\n\r\nexport interface Rootstate {\r\n\tusers: IuserState;\r\n\tchef: IChefState;\r\n\trestaurants: IrestaurantsState;\r\n\tdishes: IDishesState;\r\n}\r\n\r\nexport interface IDishesState {\r\n\tvalue: IDishes[];\r\n}\r\n\r\nexport interface IuserState {\r\n\t[x: string]: any;\r\n\tvalue: IUser[];\r\n}\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tchef: chefReducer,\r\n\t\trestaurants: restaurantsReducer,\r\n\t\tdishes: dishesReducer,\r\n\t\tusers: userReducer,\r\n\t},\r\n});\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\RestaurantPage\\RestaurantPage.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\OneRest\\OneRest.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignInPage\\SignInPage.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ChefPage\\ChefPage.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignUpPage\\SignUpPage.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\HomePage\\HomePage.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\OneChef\\OneChef.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\CheckOut\\CheckOut.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\chefSlice.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\restaurantsSlice.tsx",["266"],[],"import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n\tIRestaurants,\r\n\tIrestaurantsState,\r\n} from '../../components/RestaurantPage/RestaurantPage';\r\nconst data = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/restaurant/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\nconst rest: IRestaurants[] = await data();\r\nexport const restaurantsSlice = createSlice({\r\n\tname: 'restaurants',\r\n\tinitialState: {\r\n\t\tvalue: rest,\r\n\t\tfilteredValue: rest,\r\n\t},\r\n\treducers: {\r\n\t\tsetAllRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t\tsetPopularRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = [...state.value].sort(\r\n\t\t\t\t(a: any, b: any) => b.views - a.views\r\n\t\t\t);\r\n\t\t},\r\n\t\tsetNewRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = state.value.filter(\r\n\t\t\t\t(restaurant: any) => restaurant.newRest === true\r\n\t\t\t);\r\n\t\t},\r\n\t\tsetOpenNow: (state, action) => {\r\n\t\t\tstate.filteredValue = action.payload;\r\n\t\t},\r\n\t\tsetMap: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t\tremoveRest: (state, action) => {\r\n\t\t\tstate.filteredValue = action.payload;\r\n\t\t\tstate.value = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tsetAllRestuarants,\r\n\tsetOpenNow,\r\n\tsetMap,\r\n\tsetPopularRestuarants,\r\n\tsetNewRestuarants,\r\n\tremoveRest,\r\n} = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\dishesSlice.tsx",["267"],[],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { useState } from 'react';\r\nimport { IDishes } from '../../components/SignatureDish/DishCard';\r\n// const [newDishes, setDishes] = useState<any>([]);\r\n// const [id, setId] = useState<number>();\r\n// const [name, setName] = useState<string>('');\r\n// const [price, setPrice] = useState<number>();\r\n// const [quantity, setQuantity] = useState<number>();\r\n// const [img, setImg] = useState<string>('');\r\n// const [comment, setComment] = useState<string[]>(['']);\r\n\r\nconst data = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/dishes/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\n\r\n// const orderDish = async (\r\n// \tid: number,\r\n// \tname: string,\r\n// \tprice: number,\r\n// \timg: string,\r\n// \tcomment: string,\r\n// \tquantity: number\r\n// ) => {\r\n// \tawait fetch('http://localhost:8000/dishes/orderdish/', {\r\n// \t\tmethod: 'POST',\r\n// \t\tbody: JSON.stringify({\r\n// \t\t\tid: id,\r\n// \t\t\tname: name,\r\n// \t\t\tprice: price,\r\n// \t\t\timg: img,\r\n// \t\t\tdishtitle: 'dish-order-card-element',\r\n// \t\t\tcomment: comment,\r\n// \t\t\tquantity: quantity,\r\n// \t\t}),\r\n// \t\theaders: {\r\n// \t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n// \t\t},\r\n// \t})\r\n// \t\t.then((response) => response.json())\r\n// \t\t.then((data) => {\r\n// \t\t\tsetDishes((dish: any) => [data, ...dish]),\r\n// \t\t\t\tsetId(0),\r\n// \t\t\t\tsetName(''),\r\n// \t\t\t\tsetPrice(0),\r\n// \t\t\t\tsetQuantity(0),\r\n// \t\t\t\tsetImg(''),\r\n// \t\t\t\tsetComment(['']);\r\n// \t\t})\r\n// \t\t.catch((err) => {\r\n// \t\t\tconsole.log(err.message);\r\n// \t\t});\r\n// };\r\n\r\nconst dishes: IDishes[] = await data();\r\n\r\nexport const dishesSlice = createSlice({\r\n\tname: 'dishes',\r\n\tinitialState: {\r\n\t\tvalue: dishes,\r\n\t\tfilteredValue: dishes,\r\n\t},\r\n\treducers: {\r\n\t\tcreateOrder: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default dishesSlice.reducer;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\CheckOut\\CheckOutDetails.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\OpenClose\\OpenClose.ts",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\RangeBar\\RangeBar.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\Footer\\Footer.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\NavBar\\NavBar.tsx",["268","269"],[],"import React from 'react';\r\nimport NavBarLeft from './NavBarLeft';\r\nimport NavBarRight from './NavBarRight';\r\nimport './NavBar.css';\r\nimport NavBarMobileMenu from './NavBarMobile/NavBarMobile';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Logo from '../../assets/NavBarLogo.svg';\r\n\r\nconst NavBar: React.FC = () => {\r\n\tconst navigator = useNavigate();\r\n\tconst closeButton2 = document.getElementById('logout');\r\n\tconst data = JSON.parse(sessionStorage.getItem('data') || '{}');\r\n\tlet message = 'Welcome Guest';\r\n\r\n\tif (data.firstName && data.lastName) {\r\n\t\tconst closeButton2 = document.getElementById('logout');\r\n\t\tmessage = `Welcome to Epicure, ${data.firstName} ${data.lastName}!`;\r\n\t\tif (closeButton2) {\r\n\t\t\tcloseButton2.style.display = 'block';\r\n\t\t}\r\n\t}\r\n\r\n\tfunction closeButton(): void {\r\n\t\tconst messageDiv = document.getElementById('welcomeMessage');\r\n\t\tconst closeButton2 = document.getElementById('logout');\r\n\t\tif (messageDiv && closeButton2) {\r\n\t\t\tmessageDiv.style.display = 'none';\r\n\t\t\tcloseButton2.style.display = 'none';\r\n\t\t\tsessionStorage.clear();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"navbar\">\r\n\t\t\t<NavBarLeft />\r\n\t\t\t<NavBarMobileMenu />\r\n\t\t\t<img\r\n\t\t\t\talt=\"mobile logo\"\r\n\t\t\t\tclassName=\"mobile-logo\"\r\n\t\t\t\tsrc={Logo}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tnavigator('/');\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<div id=\"welcomeMessage\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"logout\"\r\n\t\t\t\t\tonClick={() => closeButton()}\r\n\t\t\t\t\tclassName=\"log-out\">\r\n\t\t\t\t\tlog out\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>{message}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<NavBarRight />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\RestaurantFilterBar\\RestaurantFilterBar.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\PopularRestaurants\\RestaurantCard.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\RestaurantCardsPage\\RestaurantCardsPage.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\PopularRestaurants\\PopularRestaurants.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignatureDish\\SignatureDish.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignIn\\SignIn.tsx",["270","271","272","273","274"],[],"import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Rootstate } from '../../store/store';\r\nimport { setActiveUsers } from '../../store/slices/usersSlice';\r\nimport './Signin.css';\r\nimport axios from 'axios';\r\n\r\nconst SignIn: React.FC = () => {\r\n\tconst data = useSelector((state: Rootstate) => state.users.value);\r\n\tconst filter = useSelector((state: Rootstate) => state.users.filteredValue);\r\n\tconst [email, setEmail] = useState<string>('');\r\n\tconst [password, setPassword] = useState<string>('');\r\n\tconst [connect, setconnect] = useState<boolean>(false);\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => {\r\n\t\tdispatch(setActiveUsers({ email: email }));\r\n\t}, [email]);\r\n\tconst logInUser = async () => {\r\n\t\tconsole.log(password);\r\n\t\ttry {\r\n\t\t\tconst userReq = await axios.post('http://localhost:8000/users/create/', {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t});\r\n\t\t\tsessionStorage.setItem('data', JSON.stringify(userReq.data));\r\n\t\t\tdispatch(setActiveUsers(email));\r\n\t\t\tmessage();\r\n\t\t\tsetEmail('');\r\n\t\t\tsetPassword('');\r\n\t\t} catch (error: any) {\r\n\t\t\talert(error.response.data);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleRegister = async () => {\r\n\t\tawait logInUser();\r\n\t};\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst message = () => {\r\n\t\tnavigate('/');\r\n\t};\r\n\treturn (\r\n\t\t<div id=\"sign-in-page\">\r\n\t\t\t{' '}\r\n\t\t\t<form onSubmit={handleRegister}>\r\n\t\t\t\t<div id=\"sign-in-container\">\r\n\t\t\t\t\t<div id=\"sign-in-title\">\r\n\t\t\t\t\t\t<div id=\"sign-in\">SIGN IN</div>\r\n\t\t\t\t\t\t<div>To continue the order, please sign in</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"user-information\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\tid=\"input-information\"\r\n\t\t\t\t\t\t\tplaceholder=\"Email adress\"\r\n\t\t\t\t\t\t\ttype={'text'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\tid=\"input-information\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\ttype={'password'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div id=\"login-button\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid=\"button-login\"\r\n\t\t\t\t\t\t\ttype=\"submit\">\r\n\t\t\t\t\t\t\tLOGIN\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button id=\"forget-password-button\">Forget password?</button>{' '}\r\n\t\t\t\t\t\t<div id=\"or-container\">\r\n\t\t\t\t\t\t\t<hr className=\"hr-left\" />\r\n\t\t\t\t\t\t\t<div id=\"or-letter\">or</div>\r\n\t\t\t\t\t\t\t<hr className=\"hr-right\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid=\"sign-up-button\"\r\n\t\t\t\t\t\t\tonClick={() => navigate('/SignUp')}>\r\n\t\t\t\t\t\t\tSIGN UP\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignatureDish\\DishCard.tsx",["275"],[],"import React, { useState } from 'react';\r\nimport vegan from '../../assets/vegan.svg';\r\nimport vegitarian from '../../assets/Vegitarian.svg';\r\nimport spicy from '../../assets/spicy.svg';\r\nimport iconPrice from '../../assets/iconprice.svg';\r\nimport ModalRest from '../ModalRestaurant/ModalRest';\r\nimport { ObjectId } from 'mongoose';\r\n\r\nexport interface IDishes {\r\n\t_id: ObjectId;\r\n\tid: number;\r\n\tname: string;\r\n\ttime?: string[];\r\n\tabout: string;\r\n\tprice: number;\r\n\tallergan?: string[];\r\n\ticons: string[];\r\n\tsides?: string[];\r\n\tchanges?: string[];\r\n\timg: string;\r\n\tsignatureDish?: boolean;\r\n\ttitle?: string;\r\n\tdishtitle: string;\r\n\tkey: number;\r\n}\r\n\r\nconst DishCard: React.FC<IDishes> = (props: IDishes) => {\r\n\tconst typesEnum: { [key: string]: string } = {\r\n\t\tspicy: spicy,\r\n\t\tvegitarian: vegitarian,\r\n\t\tvegan: vegan,\r\n\t};\r\n\r\n\tconst [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n\tconst { img, icons, name, about, price, _id, title, dishtitle } = props;\r\n\r\n\tconst handleDishClick = () => {\r\n\t\tsetIsModalOpen(true);\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tsetIsModalOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName={dishtitle}\r\n\t\t\t\tonClick={handleDishClick}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"img-rest\"\r\n\t\t\t\t\talt=\"dish\"\r\n\t\t\t\t\tsrc={img}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id={title}>\r\n\t\t\t\t\t<div className=\"dish-name\">{name}</div>\r\n\t\t\t\t\t<div className=\"dishTypes\">\r\n\t\t\t\t\t\t{icons.map((type: string) => (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"dish-img\"\r\n\t\t\t\t\t\t\t\talt=\"dish-type\"\r\n\t\t\t\t\t\t\t\tsrc={typesEnum[String(type)]}\r\n\t\t\t\t\t\t\t\tkey={type}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"description\">{about}</div>\r\n\t\t\t\t\t<div id=\"price-container\">\r\n\t\t\t\t\t\t<hr id=\"hr-left\" />\r\n\t\t\t\t\t\t<div id=\"price-with-icon\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={iconPrice}\r\n\t\t\t\t\t\t\t\tid=\"icon-price\"></img>\r\n\t\t\t\t\t\t\t<div>{price}</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<hr id=\"hr-right\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{isModalOpen && _id && (\r\n\t\t\t\t<ModalRest\r\n\t\t\t\t\tid={_id}\r\n\t\t\t\t\tcloseButton={closeModal}\r\n\t\t\t\t\tkey={price}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DishCard;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ChefPageFilter\\ChefPageFilter.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ImageCard\\ImageCard.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\AboutUs\\AboutUs.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\SignUp\\SignUp.tsx",["276","277"],[],"import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IUser } from '../../store/slices/usersSlice';\r\nimport { Rootstate } from '../../store/store';\r\nimport './SignUp.css';\r\n\r\nconst SignUp: React.FC = () => {\r\n\tconst usersData = useSelector(\r\n\t\t(state: Rootstate) => state.users.filteredValue\r\n\t);\r\n\tconst [users, setUsers] = useState<any>(usersData);\r\n\tconst [firstName, setFirstName] = useState<string>('');\r\n\tconst [lastName, setLastName] = useState<string>('');\r\n\tconst [email, setEmail] = useState<string>('');\r\n\tconst [password, setPassword] = useState<string>('');\r\n\tconst [connect, setconnect] = useState<boolean>(false);\r\n\tconst registerUser = async (\r\n\t\tfirstName: string,\r\n\t\tlastName: string,\r\n\t\temail: string,\r\n\t\tpassword: string\r\n\t) => {\r\n\t\ttry {\r\n\t\t\tawait fetch('http://localhost:8000/users/', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tfirstName: firstName,\r\n\t\t\t\t\tlastName: lastName,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tsetUsers((newUsers: IUser[]) => [...newUsers, data]);\r\n\t\t\t\t\tsetFirstName('');\r\n\t\t\t\t\tsetLastName('');\r\n\t\t\t\t\tsetEmail('');\r\n\t\t\t\t\tsetPassword('');\r\n\t\t\t\t\tnavigate('/SignIn');\r\n\t\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\talert('please try again');\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst handleRegister = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('registering user', firstName, lastName, email, password);\r\n\t\tregisterUser(firstName, lastName, email, password);\r\n\t\tsetconnect(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"sign-Up-container\">\r\n\t\t\t<div id=\"sign-up-title\">\r\n\t\t\t\t<div id=\"sign-up\">SIGN UP</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"sign-up-information\">\r\n\t\t\t\t<form onSubmit={handleRegister}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={firstName}\r\n\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\r\n\t\t\t\t\t\tid=\"input-sign-up-information\"\r\n\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\ttype={'text'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={lastName}\r\n\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\r\n\t\t\t\t\t\tid=\"input-sign-up-information\"\r\n\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\ttype={'text'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\tid=\"input-sign-up-information\"\r\n\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\ttype={'text'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\tid=\"input-sign-up-information\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\ttype={'password'}\r\n\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t<button id=\"submit-button\">SUBMIT</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default SignUp;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ChefOfTheWeek\\ChefOfTheWeek.tsx",["278"],[],"import React, { useEffect, useState } from 'react';\r\nimport './ChefOfTheWeek.css';\r\nimport ChefCard from './ChefCard';\r\nimport { useSelector } from 'react-redux';\r\nimport { Rootstate } from '../../store/store';\r\nimport { IChef } from '../ChefPage/ChefPage';\r\n\r\nconst ChefOfTheWeek: React.FC = () => {\r\n\tconst chefsData = useSelector((state: Rootstate) => state.chef.value);\r\n\tconst [chefoftheweek, setchefoftheweek] = useState<IChef>();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst chefs = chefsData.find((chef: IChef) => chef.chefOfTheWeek);\r\n\t\tsetchefoftheweek(chefs);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div id=\"chef-of-the-week\">\r\n\t\t\t<div id=\"titlechef\">CHEF OF THE WEEK:</div>\r\n\t\t\t<div id=\"information\">\r\n\t\t\t\t{chefoftheweek && (\r\n\t\t\t\t\t<ChefCard\r\n\t\t\t\t\t\tdescription={chefoftheweek.description}\r\n\t\t\t\t\t\timg={chefoftheweek.img}\r\n\t\t\t\t\t\tname={chefoftheweek.name}\r\n\t\t\t\t\t\trestaurant={chefoftheweek.restaurant}\r\n\t\t\t\t\t\t_id={chefoftheweek._id}\r\n\t\t\t\t\t\tkey={chefoftheweek.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChefOfTheWeek;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\Hero\\Hero.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\IconMenu\\IconMenu.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\YourOrder\\YourOrderSubmit.tsx",["279"],[],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Rootstate } from '../../store/store';\r\nimport DishOrder from '../DishOrder/DishOrder';\r\nimport ModalOrder from '../ModalOrder/ModalOrder';\r\nimport { IDishes } from '../SignatureDish/DishCard';\r\nimport emptyBag from './Image/empty-bag.svg';\r\nimport './YourOrderSubmit.css';\r\ninterface IComment {\r\n\tcomment: string;\r\n\tnumber: number;\r\n}\r\n\r\nconst YourOrderSubmit: React.FC = () => {\r\n\tconst data = JSON.parse(sessionStorage.getItem('orders') || '[]');\r\n\tconst navigate = useNavigate();\r\n\tconst [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\tconst SignatureDishData = useSelector(\r\n\t\t(state: Rootstate) => state.dishes.value\r\n\t);\r\n\r\n\tconst dishData = data?.map((dish: any) => {\r\n\t\treturn dish.IdNum._id;\r\n\t});\r\n\r\n\tconst orderData: IDishes[] =\r\n\t\tSignatureDishData?.filter((rest: IDishes) => {\r\n\t\t\treturn dishData?.includes(rest._id);\r\n\t\t}) ?? [];\r\n\tconst comment = Array.isArray(data)\r\n\t\t? data.map((comment: IComment) => comment.comment).join(' | ')\r\n\t\t: '';\r\n\tconsole.log(comment);\r\n\tconst number = Array.isArray(data)\r\n\t\t? data.map((comment: IComment) => comment.number)\r\n\t\t: [];\r\n\r\n\tconst handleDishClick = () => {\r\n\t\tsetIsModalOpen(true);\r\n\t\t// navigate('/', { state: isModalOpen, replace: true });\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetIsModalOpen(false);\r\n\t};\r\n\tconsole.log(orderData);\r\n\treturn (\r\n\t\t<div id=\"your-check-out\">\r\n\t\t\t<div id=\"order-card\">\r\n\t\t\t\t<div id=\"title-order\">YOUR ORDER</div>\r\n\t\t\t\t<div className=\"bag\">\r\n\t\t\t\t\t{data?.length > 0 ? (\r\n\t\t\t\t\t\t<div id=\"order-information\">\r\n\t\t\t\t\t\t\t{orderData?.map((dish: IDishes, index: number) => {\r\n\t\t\t\t\t\t\t\tconst commentForDish = comment.split(' | ')[index] ?? '';\r\n\t\t\t\t\t\t\t\tconst numberForDish = number?.[index] ?? 0;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<DishOrder\r\n\t\t\t\t\t\t\t\t\t\tid={0}\r\n\t\t\t\t\t\t\t\t\t\tprice={dish.price}\r\n\t\t\t\t\t\t\t\t\t\timg={dish.img}\r\n\t\t\t\t\t\t\t\t\t\tname={dish.name}\r\n\t\t\t\t\t\t\t\t\t\tcomment={commentForDish}\r\n\t\t\t\t\t\t\t\t\t\tquantity={numberForDish}\r\n\t\t\t\t\t\t\t\t\t\tdishtitle={'dish-order-card-element'}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={emptyBag}\r\n\t\t\t\t\t\t\tid=\"emptyBag\"\r\n\t\t\t\t\t\t\talt=\"empty-bag\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div id=\"comment-and-buttons-container\">\r\n\t\t\t\t\t\t<div id=\"add-comment\">Add A Comment</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tplaceholder=\"Special requests, allergies, detary restrictions, etc.\"\r\n\t\t\t\t\t\t\ttype={'text'}\r\n\t\t\t\t\t\t\tid=\"comment-input\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid=\"check-out\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={handleDishClick}>\r\n\t\t\t\t\t\t\tPAY\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>{' '}\r\n\t\t\t{isModalOpen && (\r\n\t\t\t\t<ModalOrder\r\n\t\t\t\t\tcloseButton={closeModal}\r\n\t\t\t\t\ttime={90}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default YourOrderSubmit;\r\n// if (data) {\r\n// \tconst comment = data.map((comment: any) => {\r\n// \t\treturn comment.comment;\r\n// \t});\r\n// \t// rest of your code\r\n// } else {\r\n// \t// handle the case where data is undefined\r\n// }\r\n\r\n// if (data) {\r\n// \tconst number = data.map((number: any) => {\r\n// \t\treturn number.number;\r\n// \t});\r\n// \t// rest of your code\r\n// } else {\r\n// \t// handle the case where data is undefined\r\n// }\r\n\r\n// // const number =\r\n// // \tdata?.map((number: any) => {\r\n// // \t\treturn number.number;\r\n// // \t}) ?? [];\r\n\r\n// const orderData: IDishes[] =\r\n// \tSignatureDishData?.filter((rest: IDishes) => {\r\n// \t\treturn dishData?.includes(rest._id);\r\n// \t}) ?? [];\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\NavBar\\NavBarRight.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\NavBar\\NavBarLeft.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ChefOfTheWeek\\ChefCard.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\NavBar\\NavBarMobile\\NavBarMobile.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ModalRestaurant\\ModalRest.tsx",["280","281","282"],[],"import { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport DishCard, { IDishes } from '../SignatureDish/DishCard';\r\nimport './ModalRest.css';\r\nimport { Rootstate } from '../../store/store';\r\nimport { ObjectId } from 'mongoose';\r\n\r\ninterface IModal {\r\n\tid: ObjectId;\r\n\tkey?: any;\r\n\tcloseButton: Function;\r\n}\r\n\r\nconst ModalRest: React.FC<IModal> = (props: IModal) => {\r\n\tconst navigate = useNavigate();\r\n\t// const order: any[] = [];\r\n\t// sessionStorage.setItem('order', JSON.stringify(order));\r\n\tconst dishesData = useSelector((state: Rootstate) => state.dishes.value);\r\n\tconst [comment, setComment] = useState<string[]>(['']);\r\n\tconst [informationDIsh, setinformationDIsh] = useState<string[]>(['']);\r\n\tconst [number, setNumber] = useState<number>(0);\r\n\tlet newId = props.id;\r\n\tconst IdNum: IDishes | undefined = dishesData?.find((rest: IDishes) => {\r\n\t\treturn rest._id?.toString() === newId?.toString();\r\n\t});\r\n\tconst handlePlus = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tsetNumber(number + 1);\r\n\t};\r\n\r\n\tconst handleMinus = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tsetNumber(number - 1);\r\n\t};\r\n\r\n\tconst postInformation = (event: React.FormEvent<HTMLFormElement>) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// Retrieve existing orders array from sessionStorage or create an empty array if it doesn't exist\r\n\t\tconst storedOrders = JSON.parse(sessionStorage.getItem('orders') || '[]');\r\n\t\t// Create a new order object\r\n\t\tconst order = { IdNum, comment, number };\r\n\r\n\t\t// Add the new order to the existing orders array\r\n\t\tconst updatedOrders = [...storedOrders, order];\r\n\r\n\t\t// Store the updated orders array back into sessionStorage\r\n\t\tsessionStorage.setItem('orders', JSON.stringify(updatedOrders));\r\n\r\n\t\tnavigate('/');\r\n\t\t// You can use the comment state here to send data to the server\r\n\t};\r\n\r\n\tconst handleNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst value = event.target.value;\r\n\t\tsetNumber(parseInt(value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"restaurants-card\">\r\n\t\t\t<div\r\n\t\t\t\tid=\"restaurants-card-Modal\"\r\n\t\t\t\tclassName=\"modal\">\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<form onSubmit={postInformation}>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tid=\"closeButton\"\r\n\t\t\t\t\t\t\tonClick={() => props.closeButton()}\r\n\t\t\t\t\t\t\tclassName=\"close\">\r\n\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{IdNum ? (\r\n\t\t\t\t\t\t\t<DishCard\r\n\t\t\t\t\t\t\t\timg={IdNum.img}\r\n\t\t\t\t\t\t\t\ticons={IdNum.icons}\r\n\t\t\t\t\t\t\t\tname={IdNum.name}\r\n\t\t\t\t\t\t\t\tabout={IdNum.about}\r\n\t\t\t\t\t\t\t\tprice={IdNum.price}\r\n\t\t\t\t\t\t\t\tid={IdNum.id}\r\n\t\t\t\t\t\t\t\ttitle={'card-dish-information-modal'}\r\n\t\t\t\t\t\t\t\tdishtitle={'dish-card-element-Modal'}\r\n\t\t\t\t\t\t\t\t_id={IdNum._id}\r\n\t\t\t\t\t\t\t\tkey={IdNum.id}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p>Restaurant not found</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"bag-information\">\r\n\t\t\t\t\t\t\t<div id=\"choose-a-side\">\r\n\t\t\t\t\t\t\t\t<div className=\"highlight\">Choose a side</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={'White bread'}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setComment([...comment, e.target.value])}\r\n\t\t\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t\t\t\tWhite bread\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={'Sticky rice'}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setComment([...comment, e.target.value])}\r\n\t\t\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t\t\t\tSticky rice\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div id=\"Changes\">\r\n\t\t\t\t\t\t\t\t<div className=\"highlight\">Changes</div>\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tvalue={'Without peanut'}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setComment([...comment, e.target.value])}\r\n\t\t\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t\t\t\tWithout peanut\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={'Sticky Less spicy'}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setComment([...comment, e.target.value])}\r\n\t\t\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t\t\t\tSticky Less spicy\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"highlight\">Quantity</div>\r\n\t\t\t\t\t\t\t<div id=\"Quantity\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tid=\"symbol\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleMinus}>\r\n\t\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<div id=\"symbol\">{number}</div>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tid=\"symbol\"\r\n\t\t\t\t\t\t\t\t\tonClick={handlePlus}>\r\n\t\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\t\t\t\tid=\"add-to-bag\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\">\r\n\t\t\t\t\t\t\t\t\tADD TO BAG\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ModalRest;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\DishOrder\\DishOrder.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\ModalOrder\\ModalOrder.tsx",["283"],[],"import { useSelector } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport vector from './images/Vector.svg';\r\nimport './ModalOrder.css';\r\nimport { Rootstate } from '../../store/store';\r\nimport DishModalOrder from '../DishModalOrder/DishModalOrder';\r\nimport icon from '../DishOrder/image/bold-price.svg';\r\nimport { IDishes } from '../SignatureDish/DishCard';\r\n\r\ninterface IModal {\r\n\ttime: number;\r\n\tcloseButton: Function;\r\n}\r\ninterface IComment {\r\n\tcomment: string;\r\n\tnumber: number;\r\n}\r\nconst ModalOrder: React.FC<IModal> = (props: IModal) => {\r\n\tconst dishesData = useSelector((state: Rootstate) => state.dishes.value);\r\n\tconst data = JSON.parse(sessionStorage.getItem('orders') || '[]');\r\n\tconst dishData = data?.map((dish: any) => {\r\n\t\treturn dish.IdNum._id;\r\n\t});\r\n\t// const [totalPrice, setTotalPrice] = useState<number>(0);\r\n\tconst orderData: IDishes[] =\r\n\t\tdishesData?.filter((rest: IDishes) => {\r\n\t\t\treturn dishData?.includes(rest._id);\r\n\t\t}) ?? [];\r\n\r\n\tconst number = Array.isArray(data)\r\n\t\t? data.map((comment: IComment) => comment.number)\r\n\t\t: [];\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.style.overflow = 'hidden';\r\n\t\twindow.scrollTo(0, 0);\r\n\t\treturn () => {\r\n\t\t\tdocument.body.style.overflow = 'auto';\r\n\t\t};\r\n\t}, []);\r\n\tlet totalPrice = 0;\r\n\treturn (\r\n\t\t<div className=\"restaurants-card\">\r\n\t\t\t<div\r\n\t\t\t\tid=\"restaurants-card-Modal\"\r\n\t\t\t\tclassName=\"modal\">\r\n\t\t\t\t<div className=\"content-modal\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tid=\"closeButton\"\r\n\t\t\t\t\t\tonClick={() => props.closeButton()}\r\n\t\t\t\t\t\tclassName=\"close\">\r\n\t\t\t\t\t\t&times;\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\talt=\"vector\"\r\n\t\t\t\t\t\tid=\"vector\"\r\n\t\t\t\t\t\tsrc={vector}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div id=\"order-recived\">ORDER RECIVED</div>\r\n\t\t\t\t\t<div id=\"your-food\">Your food is in process</div>\r\n\t\t\t\t\t<div id=\"time\">\r\n\t\t\t\t\t\t<div id=\"hour-time\">Arrive in</div>\r\n\t\t\t\t\t\t<div id=\"hour\">{props.time}:00</div>\r\n\t\t\t\t\t\t<div id=\"hour-time\">mins</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"alltheorder\">\r\n\t\t\t\t\t\t{data?.length > 0 ? (\r\n\t\t\t\t\t\t\t<div id=\"order-information\">\r\n\t\t\t\t\t\t\t\t{orderData?.map((dish: IDishes, index: number) => {\r\n\t\t\t\t\t\t\t\t\tconst numberForDish = number?.[index] ?? 0;\r\n\t\t\t\t\t\t\t\t\tconst totalprice2 = dish.price * numberForDish;\r\n\t\t\t\t\t\t\t\t\ttotalPrice += totalprice2;\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<DishModalOrder\r\n\t\t\t\t\t\t\t\t\t\t\tid={0}\r\n\t\t\t\t\t\t\t\t\t\t\tname={dish.name}\r\n\t\t\t\t\t\t\t\t\t\t\tprice={dish.price}\r\n\t\t\t\t\t\t\t\t\t\t\tquantity={numberForDish}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={dish.id}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"total-price\">\r\n\t\t\t\t\t\tTOTAL -{' '}\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={icon}\r\n\t\t\t\t\t\t\talt=\"icon-price\"\r\n\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t{totalPrice}{' '}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ModalOrder;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\YourOrder\\YourOrder.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\DishModalOrder\\DishModalOrder.tsx",[],[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\usersSlice.tsx",["284"],[],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport interface IUser {\r\n\tname: any;\r\n\tfirstName: string;\r\n\tlastName: string;\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nconst datausers = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/users/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\nconst users: IUser[] = await datausers();\r\nconsole.log(users);\r\nexport const userSlice = createSlice({\r\n\tname: 'users',\r\n\tinitialState: {\r\n\t\tvalue: users,\r\n\t\tfilteredValue: {},\r\n\t},\r\n\treducers: {\r\n\t\tsetAllUsers: (state) => {\r\n\t\t\tstate.value = state.value;\r\n\t\t},\r\n\t\tsetActiveUsers: (state, action) => {\r\n\t\t\tconst currentUser = action.payload;\r\n\t\t\tconst userLogIn = users.find((user: IUser) => {\r\n\t\t\t\treturn user.email === currentUser.email;\r\n\t\t\t});\r\n\t\t\tconsole.log(userLogIn);\r\n\t\t\tstate.filteredValue = userLogIn || {};\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setAllUsers, setActiveUsers } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\store\\slices\\activeUsers.tsx",["285"],[],"import { createSlice } from '@reduxjs/toolkit';\r\nconst data = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/login', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\nconst active: IActive[] = await data();\r\n\r\nexport interface IActive {\r\n\temail: string;\r\n\tpassword: string;\r\n\ttoken?: string;\r\n\tconnect?: boolean;\r\n}\r\n\r\ninterface IActiveUsersState {\r\n\tvalue: IActive[];\r\n\tfilteredValue: IActive[];\r\n}\r\n\r\nexport const activeUsers = createSlice({\r\n\tname: 'users',\r\n\tinitialState: {\r\n\t\tvalue: {},\r\n\t},\r\n\treducers: {\r\n\t\tsetActiveUsers: (state, action) => {\r\n\t\t\tconst currentUser = action.payload;\r\n\t\t\tconst userLogIn = active.find((user) => {\r\n\t\t\t\treturn user.email === currentUser.email;\r\n\t\t\t});\r\n\t\t\tstate.value = userLogIn || {};\r\n\t\t\tconsole.log(userLogIn);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setActiveUsers } = activeUsers.actions;\r\n\r\nexport default activeUsers.reducer;\r\n",[],"C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\AddRest\\AddRest.tsx",["286"],[],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Rootstate } from '../../store/store';\r\nimport { IChef } from '../ChefPage/ChefPage';\r\nimport { IRestaurants } from '../RestaurantPage/RestaurantPage';\r\nimport './AddModal.css';\r\n\r\ninterface IModal {\r\n\tcloseButton: Function;\r\n}\r\n\r\nconst AddRest: React.FC<IModal> = (props: IModal) => {\r\n\tconst navigate = useNavigate();\r\n\tconst chefData = useSelector((state: Rootstate) => state.chef.filteredValue);\r\n\tconst restData = useSelector(\r\n\t\t(state: Rootstate) => state.restaurants.filteredValue\r\n\t);\r\n\tconst [selectedChef, setSelectedChef] = useState('');\r\n\tconst [rest, setRest] = useState<any>(restData);\r\n\tconst [inputValues, setInputValues] = useState<Record<string, string>>({\r\n\t\trestName: '',\r\n\t\taddress: '',\r\n\t\tchefId: '',\r\n\t\tchefName: '',\r\n\t\timg: '',\r\n\t\topenDays: '',\r\n\t\topenHours: '',\r\n\t\topenYears: '',\r\n\t\trating: '',\r\n\t});\r\n\tinterface InputField {\r\n\t\tid: string;\r\n\t\tplaceholder: string;\r\n\t\ttype: string;\r\n\t\ttitle?: string;\r\n\t\tname: string;\r\n\t}\r\n\tconst restDetails: InputField[] = [\r\n\t\t{\r\n\t\t\tid: 'name-input',\r\n\t\t\tplaceholder: 'Enter restaurant name',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Restaurant Name',\r\n\t\t\tname: 'restName',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'chef-input',\r\n\t\t\tplaceholder: 'Enter chef name',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Chef Name',\r\n\t\t\tname: 'chefName',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'open-hours-input',\r\n\t\t\tplaceholder: 'Enter open hours',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Open Hours',\r\n\t\t\tname: 'openHours',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'address-input',\r\n\t\t\tplaceholder: 'Enter restaurant address',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Address',\r\n\t\t\tname: 'address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'open-days-input',\r\n\t\t\tplaceholder: 'Enter open days',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Open Days',\r\n\t\t\tname: 'openDays',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'open-year-input',\r\n\t\t\tplaceholder: 'Enter open year',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Open Year',\r\n\t\t\tname: 'openYears',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'img-input',\r\n\t\t\tplaceholder: 'Enter image URL',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Image',\r\n\t\t\tname: 'img',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'rating-input',\r\n\t\t\tplaceholder: 'Enter rating',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Rating',\r\n\t\t\tname: 'rating',\r\n\t\t},\r\n\t];\r\n\r\n\tconst renderInputs = (inputFields: InputField[]) => {\r\n\t\treturn inputFields.map((field) => (\r\n\t\t\t<div\r\n\t\t\t\tid=\"input-container\"\r\n\t\t\t\tkey={field.id}>\r\n\t\t\t\t{field.title && <div id=\"input-title\">{field.title}</div>}\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"input-full-Name\"\r\n\t\t\t\t\tplaceholder={field.placeholder}\r\n\t\t\t\t\ttype={field.type}\r\n\t\t\t\t\tname={field.name}\r\n\t\t\t\t\tvalue={inputValues[field.name]}\r\n\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\tsetInputValues({ ...inputValues, [field.name]: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\r\n\tconst newRest = async (\r\n\t\trestName: string,\r\n\t\taddress: string,\r\n\t\tchefId: string,\r\n\t\tchefName: string,\r\n\t\timg: string,\r\n\t\topenDays: string,\r\n\t\topenHours: string,\r\n\t\topenYears: string,\r\n\t\trating: string\r\n\t) => {\r\n\t\ttry {\r\n\t\t\tawait fetch('http://localhost:8000/restaurant/', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\trestName: restName,\r\n\t\t\t\t\taddress: address,\r\n\t\t\t\t\tchefId: chefId,\r\n\t\t\t\t\tchefName: chefName,\r\n\t\t\t\t\topenDays: openDays,\r\n\t\t\t\t\topenHours: openHours,\r\n\t\t\t\t\topenYears: openYears,\r\n\t\t\t\t\trating: rating,\r\n\t\t\t\t\timg: img,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tsetRest((newRest: [IRestaurants]) => [...newRest, data]);\r\n\t\t\t\t\tsetInputValues({\r\n\t\t\t\t\t\trestName: '',\r\n\t\t\t\t\t\taddress: '',\r\n\t\t\t\t\t\tchefId: '',\r\n\t\t\t\t\t\tchefName: '',\r\n\t\t\t\t\t\timg: '',\r\n\t\t\t\t\t\topenDays: '',\r\n\t\t\t\t\t\topenHours: '',\r\n\t\t\t\t\t\topenYears: '',\r\n\t\t\t\t\t\trating: '',\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnavigate('/');\r\n\t\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\talert('please try again');\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\tconst handleChangeChef = (e: any) => {\r\n\t\tsetSelectedChef(e.target.value);\r\n\t};\r\n\tconst handSaveRest = async (e: any, value: any) => {\r\n\t\te.preventDefault();\r\n\t\tconst credentials: any = {\r\n\t\t\tid: 0,\r\n\t\t\trestName: '',\r\n\t\t\tchefName: '',\r\n\t\t\taddress: [],\r\n\t\t\tchefId: '',\r\n\t\t\topenHours: [],\r\n\t\t\topenDays: [],\r\n\t\t\topenYear: 0,\r\n\t\t\timg: '',\r\n\t\t\trating: 0,\r\n\t\t};\r\n\t\tconst inputObj = e.target;\r\n\r\n\t\tObject.values(inputObj).forEach((obj: any) => {\r\n\t\t\tswitch (obj.name) {\r\n\t\t\t\tcase 'rating':\r\n\t\t\t\t\tcredentials[obj.name] = Number(obj.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// case 'chefName':\r\n\t\t\t\tcase 'restName':\r\n\t\t\t\t\tcredentials[obj.name] = obj.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'chefName':\r\n\t\t\t\t\tcredentials[obj.name] = value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'img':\r\n\t\t\t\tcase 'address':\r\n\t\t\t\t\tcredentials[obj.name] = obj.value.split(',').map(String);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'openYears':\r\n\t\t\t\tcase 'openDays':\r\n\t\t\t\tcase 'openHours':\r\n\t\t\t\t\tcredentials[obj.name] = obj.value.split(',').map(Number);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcredentials[obj.name] = obj.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t\tconsole.log(credentials);\r\n\t\tconst restName = credentials.restName;\r\n\t\tconst address = credentials.address;\r\n\t\tconst chefId = credentials.chefId;\r\n\t\tconst chefName = credentials.chefName;\r\n\t\tconst img = credentials.img;\r\n\t\tconst openDays = credentials.openDays;\r\n\t\tconst openHours = credentials.openHours;\r\n\t\tconst openYears = credentials.openYears;\r\n\t\tconst rating = credentials.rating;\r\n\t\tawait newRest(\r\n\t\t\trestName,\r\n\t\t\taddress,\r\n\t\t\tchefId,\r\n\t\t\tchefName,\r\n\t\t\timg,\r\n\t\t\topenDays,\r\n\t\t\topenHours,\r\n\t\t\topenYears,\r\n\t\t\trating\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"restaurants-card\">\r\n\t\t\t<form onSubmit={(e) => handSaveRest(e, selectedChef)}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"restaurants-card-Modal\"\r\n\t\t\t\t\tclassName=\"modal\">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tid=\"closeButton\"\r\n\t\t\t\t\t\t\tonClick={() => props.closeButton()}\r\n\t\t\t\t\t\t\tclassName=\"close\">\r\n\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"rest-information\">\r\n\t\t\t\t\t\t\t<div id=\"information\">\r\n\t\t\t\t\t\t\t\t<select onChange={handleChangeChef}>\r\n\t\t\t\t\t\t\t\t\t<option>CHEF'S</option>\r\n\t\t\t\t\t\t\t\t\t{chefData.map((chef: IChef) => (\r\n\t\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={chef._id?.toString()}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={chef._id?.toString()}>\r\n\t\t\t\t\t\t\t\t\t\t\t{chef.name}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t<div>{renderInputs(restDetails)}</div>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tid=\"add-button\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\">\r\n\t\t\t\t\t\t\t\t\tADD RESTAURANT\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default AddRest;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\AddDIsh\\AddDish.tsx",["287","288","289","290"],[],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Rootstate } from '../../store/store';\r\nimport { IRestaurants } from '../RestaurantPage/RestaurantPage';\r\n\r\ninterface IModal {\r\n\tcloseButton: Function;\r\n}\r\n\r\nconst AddDish: React.FC<IModal> = (props: IModal) => {\r\n\tconst restData = useSelector(\r\n\t\t(state: Rootstate) => state.restaurants.filteredValue\r\n\t);\r\n\tconst [rest, setRest] = useState<any>(restData);\r\n\tconst [inputValues, setInputValues] = useState({});\r\n\tinterface InputField {\r\n\t\tid: string;\r\n\t\tplaceholder: string;\r\n\t\ttype: string;\r\n\t\ttitle?: string;\r\n\t\tname: string;\r\n\t}\r\n\tconst restDetails: InputField[] = [\r\n\t\t{\r\n\t\t\tid: 'name-input',\r\n\t\t\tplaceholder: 'Enter dish name',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Dish Name',\r\n\t\t\tname: 'dishName',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'about-input',\r\n\t\t\tplaceholder: 'Enter about the dish',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'About',\r\n\t\t\tname: 'about',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'price-input',\r\n\t\t\tplaceholder: 'Enter dish price',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Price',\r\n\t\t\tname: 'dishPrice',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'icons-input',\r\n\t\t\tplaceholder: 'Enter the dish symbols',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Icons',\r\n\t\t\tname: 'icons',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'img-input',\r\n\t\t\tplaceholder: 'Enter image URL',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Image',\r\n\t\t\tname: 'img',\r\n\t\t},\r\n\t];\r\n\r\n\tconst renderInputs = (inputFields: InputField[]) => {\r\n\t\treturn inputFields.map((field) => (\r\n\t\t\t<div\r\n\t\t\t\tid=\"input-container\"\r\n\t\t\t\tkey={field.id}>\r\n\t\t\t\t{field.title && <div id=\"input-title\">{field.title}</div>}\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"input-full-Name\"\r\n\t\t\t\t\tplaceholder={field.placeholder}\r\n\t\t\t\t\ttype={field.type}\r\n\t\t\t\t\tname={field.name}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\r\n\t// const postInformation = () => {\r\n\t// \treturn comment;\r\n\t// \t//to come back!!\r\n\t// };\r\n\r\n\tconst newRest = async () => {\r\n\t\ttry {\r\n\t\t\tawait fetch('http://localhost:8000/restaurant/', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tsetRest((newRest: IRestaurants[]) => [...newRest, data]);\r\n\t\t\t\t\t// setFirstName('');\r\n\t\t\t\t\t// setLastName('');\r\n\t\t\t\t\t// setEmail('');\r\n\t\t\t\t\t// setPassword('');\r\n\t\t\t\t\t// navigate('/SignIn');\r\n\t\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\talert('please try again');\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\t// const navigate = useNavigate();\r\n\tconst handleRegister = async (e: any) => {\r\n\t\tawait newRest();\r\n\t};\r\n\r\n\tconst handSaveRest = async (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tconst credentials: any = {\r\n\t\t\tid: 0,\r\n\t\t\tname: '',\r\n\t\t\tabout: '',\r\n\t\t\tchefId: '',\r\n\t\t\trestaurantId: '',\r\n\t\t\tprice: '',\r\n\t\t\ticons: [],\r\n\t\t\timg: '',\r\n\t\t};\r\n\t\tconst inputObj = e.target;\r\n\t\tconsole.log(credentials);\r\n\r\n\t\tObject.values(inputObj).forEach((obj: any) => {\r\n\t\t\tswitch (obj.name) {\r\n\t\t\t\tcase 'dishPrice':\r\n\t\t\t\t\tcredentials[obj.name] = Number(obj.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dishName':\r\n\t\t\t\tcase 'img':\r\n\t\t\t\t\tcredentials[obj.name] = String(obj.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'icons':\r\n\t\t\t\t\tcredentials[obj.name] = obj.value.split(',').map(String);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// credentials[obj.name] = obj.value.split(',').map(Number);\r\n\t\t\t\t// break;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcredentials[obj.name] = obj.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"restaurants-card\">\r\n\t\t\t<form onSubmit={handSaveRest}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"restaurants-card-Modal\"\r\n\t\t\t\t\tclassName=\"modal\">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tid=\"closeButton\"\r\n\t\t\t\t\t\t\tonClick={() => props.closeButton()}\r\n\t\t\t\t\t\t\tclassName=\"close\">\r\n\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"rest-information\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div id=\"information\">{renderInputs(restDetails)}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"add-button\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\">\r\n\t\t\t\t\t\t\t\tADD DISH\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddDish;\r\n","C:\\Users\\hagar\\bootcamp\\finalepicure\\frontend\\src\\components\\AddChef\\AddChef.tsx",["291"],[],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Rootstate } from '../../store/store';\r\nimport { IChef } from '../ChefPage/ChefPage';\r\n\r\ninterface IModal {\r\n\tcloseButton: () => void;\r\n}\r\n\r\nconst AddChef: React.FC<IModal> = (props: IModal) => {\r\n\tconst chefsdata = useSelector((state: Rootstate) => state.chef.filteredValue);\r\n\tconst [chefs, setChefs] = useState<any>(chefsdata);\r\n\tconst [inputValues, setInputValues] = useState<Record<string, string>>({\r\n\t\tname: '',\r\n\t\tdescription: '',\r\n\t\timg: '',\r\n\t});\r\n\r\n\tinterface InputField {\r\n\t\tid: string;\r\n\t\tplaceholder: string;\r\n\t\ttype: string;\r\n\t\ttitle?: string;\r\n\t\tname: string;\r\n\t}\r\n\tconst restDetails: InputField[] = [\r\n\t\t{\r\n\t\t\tid: 'name-input',\r\n\t\t\tplaceholder: 'Enter chef name',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Chef`s Name',\r\n\t\t\tname: 'name',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'description-input',\r\n\t\t\tplaceholder: 'Enter about the chef',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Description',\r\n\t\t\tname: 'description',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'img-input',\r\n\t\t\tplaceholder: 'Enter image URL',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Image',\r\n\t\t\tname: 'img',\r\n\t\t},\r\n\t];\r\n\r\n\tconst renderInputs = (inputFields: InputField[]) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{inputFields.map((field) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid=\"input-container\"\r\n\t\t\t\t\t\tkey={field.id}>\r\n\t\t\t\t\t\t{field.title && <div id=\"input-title\">{field.title}</div>}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid={field.id}\r\n\t\t\t\t\t\t\tplaceholder={field.placeholder}\r\n\t\t\t\t\t\t\ttype={field.type}\r\n\t\t\t\t\t\t\tname={field.name}\r\n\t\t\t\t\t\t\tvalue={inputValues[field.name]}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetInputValues({ ...inputValues, [field.name]: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tconst newChef = async (name: string, description: string, img: string) => {\r\n\t\ttry {\r\n\t\t\tawait fetch('http://localhost:8000/chef/', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tdescription: description,\r\n\t\t\t\t\timg: img,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tsetChefs((newChef: IChef[]) => [...newChef, data]);\r\n\t\t\t\t\tsetInputValues({ name: '', description: '', img: '' });\r\n\t\t\t\t\tnavigate('/');\r\n\t\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\talert('please try again');\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst handSaveRest = async (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tconst credentials: any = {\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\timg: '',\r\n\t\t};\r\n\t\tconst inputObj = e.target;\r\n\t\tObject.values(inputObj).forEach((obj: any) => {\r\n\t\t\tswitch (obj.name) {\r\n\t\t\t\tcase 'name':\r\n\t\t\t\tcase 'img':\r\n\t\t\t\tcase 'description':\r\n\t\t\t\t\tcredentials[obj.name] = String(obj.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcredentials[obj.name] = obj.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst name = credentials.name;\r\n\t\tconst description = credentials.description;\r\n\t\tconst img = credentials.img;\r\n\t\tconsole.log(name, img, description);\r\n\t\tawait newChef(name, img, description);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"restaurants-card\">\r\n\t\t\t<form onSubmit={handSaveRest}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"restaurants-card-Modal\"\r\n\t\t\t\t\tclassName=\"modal\">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tid=\"closeButton\"\r\n\t\t\t\t\t\t\tonClick={() => props.closeButton()}\r\n\t\t\t\t\t\t\tclassName=\"close\">\r\n\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"rest-information\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div id=\"information\">{renderInputs(restDetails)}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"add-button\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\">\r\n\t\t\t\t\t\t\t\tADD CHEF\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddChef;\r\n",{"ruleId":"292","severity":1,"message":"293","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":26},{"ruleId":"292","severity":1,"message":"296","line":4,"column":2,"nodeType":"294","messageId":"295","endLine":4,"endColumn":19},{"ruleId":"292","severity":1,"message":"297","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":18},{"ruleId":"292","severity":1,"message":"298","line":6,"column":23,"nodeType":"294","messageId":"295","endLine":6,"endColumn":34},{"ruleId":"292","severity":1,"message":"299","line":11,"column":8,"nodeType":"294","messageId":"295","endLine":11,"endColumn":20},{"ruleId":"292","severity":1,"message":"300","line":10,"column":8,"nodeType":"294","messageId":"295","endLine":10,"endColumn":12},{"ruleId":"292","severity":1,"message":"301","line":11,"column":8,"nodeType":"294","messageId":"295","endLine":11,"endColumn":14},{"ruleId":"292","severity":1,"message":"302","line":14,"column":9,"nodeType":"294","messageId":"295","endLine":14,"endColumn":16},{"ruleId":"292","severity":1,"message":"303","line":14,"column":18,"nodeType":"294","messageId":"295","endLine":14,"endColumn":28},{"ruleId":"304","severity":1,"message":"305","line":18,"column":5,"nodeType":"306","endLine":18,"endColumn":12,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":71,"column":8,"nodeType":"310","endLine":73,"endColumn":25},{"ruleId":"292","severity":1,"message":"311","line":12,"column":9,"nodeType":"294","messageId":"295","endLine":12,"endColumn":14},{"ruleId":"292","severity":1,"message":"302","line":17,"column":9,"nodeType":"294","messageId":"295","endLine":17,"endColumn":16},{"ruleId":"304","severity":1,"message":"312","line":15,"column":5,"nodeType":"306","endLine":15,"endColumn":7,"suggestions":"313"},{"ruleId":"292","severity":1,"message":"314","line":17,"column":8,"nodeType":"294","messageId":"295","endLine":17,"endColumn":16},{"ruleId":"292","severity":1,"message":"315","line":21,"column":9,"nodeType":"294","messageId":"295","endLine":21,"endColumn":24},{"ruleId":"292","severity":1,"message":"316","line":21,"column":26,"nodeType":"294","messageId":"295","endLine":21,"endColumn":44},{"ruleId":"292","severity":1,"message":"317","line":55,"column":8,"nodeType":"294","messageId":"295","endLine":55,"endColumn":26},{"ruleId":"292","severity":1,"message":"297","line":2,"column":28,"nodeType":"294","messageId":"295","endLine":2,"endColumn":36},{"ruleId":"318","severity":1,"message":"319","line":32,"column":18,"nodeType":"320","messageId":"321","endLine":32,"endColumn":29},{"ruleId":"292","severity":1,"message":"322","line":23,"column":11,"nodeType":"294","messageId":"295","endLine":23,"endColumn":28},{"ruleId":"292","severity":1,"message":"323","line":20,"column":9,"nodeType":"294","messageId":"295","endLine":20,"endColumn":13},{"ruleId":"292","severity":1,"message":"323","line":14,"column":9,"nodeType":"294","messageId":"295","endLine":14,"endColumn":13},{"ruleId":"292","severity":1,"message":"324","line":15,"column":9,"nodeType":"294","messageId":"295","endLine":15,"endColumn":20},{"ruleId":"292","severity":1,"message":"325","line":15,"column":22,"nodeType":"294","messageId":"295","endLine":15,"endColumn":36},{"ruleId":"292","severity":1,"message":"326","line":107,"column":8,"nodeType":"294","messageId":"295","endLine":107,"endColumn":22},{"ruleId":"292","severity":1,"message":"327","line":13,"column":9,"nodeType":"294","messageId":"295","endLine":13,"endColumn":14},"@typescript-eslint/no-unused-vars","'activeUsersReducer' is defined but never used.","Identifier","unusedVar","'IrestaurantsState' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'closeButton2' is assigned a value but never used.","'data' is assigned a value but never used.","'filter' is assigned a value but never used.","'connect' is assigned a value but never used.","'setconnect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["328"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'users' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chefsData'. Either include it or remove the dependency array.",["329"],"'navigate' is assigned a value but never used.","'informationDIsh' is assigned a value but never used.","'setinformationDIsh' is assigned a value but never used.","'handleNumberChange' is assigned a value but never used.","no-self-assign","'state.value' is assigned to itself.","MemberExpression","selfAssignment","'IActiveUsersState' is defined but never used.","'rest' is assigned a value but never used.","'inputValues' is assigned a value but never used.","'setInputValues' is assigned a value but never used.","'handleRegister' is assigned a value but never used.","'chefs' is assigned a value but never used.",{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},"Update the dependencies array to be: [dispatch, email]",{"range":"334","text":"335"},"Update the dependencies array to be: [chefsData]",{"range":"336","text":"337"},[770,777],"[dispatch, email]",[562,564],"[chefsData]"]