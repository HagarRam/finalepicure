{"ast":null,"code":"// import { createSlice } from '@reduxjs/toolkit';\n// import { IRestaurants } from '../../components/RestaurantPage/RestaurantPage';\n// // import data from '../../data.json';\n\n// const data1 = () => {\n// \tfetch('http://localhost:8000/restaurant/', {\n// \t\tmethod: 'GET',\n// \t})\n// \t\t.then((response) => response.json())\n// \t\t.then((data) => {\n// \t\t\treturn data;\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tconsole.log(err.message);\n// \t\t});\n// };\n\n// const newData: IRestaurants = await data1();\n// export const restaurantsSlice = createSlice({\n// \tname: 'restaurants',\n// \tinitialState: {\n// \t\tvalue: data1(),\n// \t\tfilteredValue: data1(),\n// \t\t// filteredValue: data.restaurant,\n// \t},\n// \treducers: {\n// \t\tsetAllRestuarants: (state) => {\n// \t\t\tstate.filteredValue = data1();\n// \t\t},\n// \t\tsetPopularRestuarants: (state) => {\n// \t\t\tstate.filteredValue = [...newData].sort(\n// \t\t\t\t(a: any, b: any) => b.views - a.views\n// \t\t\t);\n// \t\t},\n// \t\tsetNewRestuarants: (state) => {\n// \t\t\tstate.filteredValue = newData.filter(\n// \t\t\t\t(restaurant) => restaurant.newRest === true\n// \t\t\t);\n// \t\t},\n// \t\tsetOpenNow: (state, action) => {\n// \t\t\tstate.filteredValue = action.payload;\n// \t\t},\n// \t\tsetMap: (state) => {\n// \t\t\tstate.filteredValue = data1();\n// \t\t},\n// \t},\n// });\n\n// export const {\n// \tsetAllRestuarants,\n// \tsetOpenNow,\n// \tsetMap,\n// \tsetPopularRestuarants,\n// \tsetNewRestuarants,\n// } = restaurantsSlice.actions;\n\n// export default restaurantsSlice.reducer;\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst data1 = () => {\n  fetch('http://localhost:8000/restaurant/', {\n    method: 'GET'\n  }).then(response => response.json()).then(data => {\n    return data;\n  }).catch(err => {\n    console.log(err.message);\n  });\n};\nexport const restaurantsSlice = createSlice({\n  name: 'restaurants',\n  initialState: {\n    value: [],\n    filteredValue: []\n  },\n  reducers: {\n    setAllRestuarants: state => {\n      state.filteredValue = state.value;\n    },\n    setPopularRestuarants: state => {\n      state.filteredValue = [...state.value].sort((a, b) => b.views - a.views);\n    },\n    setNewRestuarants: state => {\n      state.filteredValue = state.value.filter(restaurant => restaurant.newRest === true);\n    },\n    setOpenNow: (state, action) => {\n      state.filteredValue = action.payload;\n    },\n    setMap: state => {\n      state.filteredValue = state.value;\n    }\n  }\n});\nexport const {\n  setAllRestuarants,\n  setOpenNow,\n  setMap,\n  setPopularRestuarants,\n  setNewRestuarants\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","data1","fetch","method","then","response","json","data","catch","err","console","log","message","restaurantsSlice","name","initialState","value","filteredValue","reducers","setAllRestuarants","state","setPopularRestuarants","sort","a","b","views","setNewRestuarants","filter","restaurant","newRest","setOpenNow","action","payload","setMap","actions","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/restaurantsSlice.tsx"],"sourcesContent":["// import { createSlice } from '@reduxjs/toolkit';\r\n// import { IRestaurants } from '../../components/RestaurantPage/RestaurantPage';\r\n// // import data from '../../data.json';\r\n\r\n// const data1 = () => {\r\n// \tfetch('http://localhost:8000/restaurant/', {\r\n// \t\tmethod: 'GET',\r\n// \t})\r\n// \t\t.then((response) => response.json())\r\n// \t\t.then((data) => {\r\n// \t\t\treturn data;\r\n// \t\t})\r\n// \t\t.catch((err) => {\r\n// \t\t\tconsole.log(err.message);\r\n// \t\t});\r\n// };\r\n\r\n// const newData: IRestaurants = await data1();\r\n// export const restaurantsSlice = createSlice({\r\n// \tname: 'restaurants',\r\n// \tinitialState: {\r\n// \t\tvalue: data1(),\r\n// \t\tfilteredValue: data1(),\r\n// \t\t// filteredValue: data.restaurant,\r\n// \t},\r\n// \treducers: {\r\n// \t\tsetAllRestuarants: (state) => {\r\n// \t\t\tstate.filteredValue = data1();\r\n// \t\t},\r\n// \t\tsetPopularRestuarants: (state) => {\r\n// \t\t\tstate.filteredValue = [...newData].sort(\r\n// \t\t\t\t(a: any, b: any) => b.views - a.views\r\n// \t\t\t);\r\n// \t\t},\r\n// \t\tsetNewRestuarants: (state) => {\r\n// \t\t\tstate.filteredValue = newData.filter(\r\n// \t\t\t\t(restaurant) => restaurant.newRest === true\r\n// \t\t\t);\r\n// \t\t},\r\n// \t\tsetOpenNow: (state, action) => {\r\n// \t\t\tstate.filteredValue = action.payload;\r\n// \t\t},\r\n// \t\tsetMap: (state) => {\r\n// \t\t\tstate.filteredValue = data1();\r\n// \t\t},\r\n// \t},\r\n// });\r\n\r\n// export const {\r\n// \tsetAllRestuarants,\r\n// \tsetOpenNow,\r\n// \tsetMap,\r\n// \tsetPopularRestuarants,\r\n// \tsetNewRestuarants,\r\n// } = restaurantsSlice.actions;\r\n\r\n// export default restaurantsSlice.reducer;\r\n\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IRestaurants } from '../../components/RestaurantPage/RestaurantPage';\r\nconst data1 = () => {\r\n\tfetch('http://localhost:8000/restaurant/', {\r\n\t\tmethod: 'GET',\r\n\t})\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\treturn data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err.message);\r\n\t\t});\r\n};\r\n\r\nexport const restaurantsSlice = createSlice({\r\n\tname: 'restaurants',\r\n\tinitialState: {\r\n\t\tvalue: [],\r\n\t\tfilteredValue: [],\r\n\t},\r\n\treducers: {\r\n\t\tsetAllRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t\tsetPopularRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = [...state.value].sort(\r\n\t\t\t\t(a: any, b: any) => b.views - a.views\r\n\t\t\t);\r\n\t\t},\r\n\t\tsetNewRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = state.value.filter(\r\n\t\t\t\t(restaurant: any) => restaurant.newRest === true\r\n\t\t\t);\r\n\t\t},\r\n\t\tsetOpenNow: (state, action) => {\r\n\t\t\tstate.filteredValue = action.payload;\r\n\t\t},\r\n\t\tsetMap: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tsetAllRestuarants,\r\n\tsetOpenNow,\r\n\tsetMap,\r\n\tsetPopularRestuarants,\r\n\tsetNewRestuarants,\r\n} = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,WAAW,QAA0B,kBAAkB;AAEhE,MAAMC,KAAK,GAAG,MAAM;EACnBC,KAAK,CAAC,mCAAmC,EAAE;IAC1CC,MAAM,EAAE;EACT,CAAC,CAAC,CACAC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACf,OAAOA,IAAI;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EACzB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGb,WAAW,CAAC;EAC3Cc,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACTC,iBAAiB,EAAGC,KAAK,IAAK;MAC7BA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK;IAClC,CAAC;IACDK,qBAAqB,EAAGD,KAAK,IAAK;MACjCA,KAAK,CAACH,aAAa,GAAG,CAAC,GAAGG,KAAK,CAACJ,KAAK,CAAC,CAACM,IAAI,CAC1C,CAACC,CAAM,EAAEC,CAAM,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CACrC;IACF,CAAC;IACDC,iBAAiB,EAAGN,KAAK,IAAK;MAC7BA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK,CAACW,MAAM,CACtCC,UAAe,IAAKA,UAAU,CAACC,OAAO,KAAK,IAAI,CAChD;IACF,CAAC;IACDC,UAAU,EAAE,CAACV,KAAK,EAAEW,MAAM,KAAK;MAC9BX,KAAK,CAACH,aAAa,GAAGc,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,MAAM,EAAGb,KAAK,IAAK;MAClBA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK;IAClC;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EACZG,iBAAiB;EACjBW,UAAU;EACVG,MAAM;EACNZ,qBAAqB;EACrBK;AACD,CAAC,GAAGb,gBAAgB,CAACqB,OAAO;AAE5B,eAAerB,gBAAgB,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}