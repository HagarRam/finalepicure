{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst data = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/chef/', {\n      method: 'GET'\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\nconst chefs = await data();\nexport const chefSlice = createSlice({\n  name: 'chef',\n  initialState: {\n    value: chefs,\n    filteredValue: chefs\n  },\n  reducers: {\n    setAllchefs: state => {\n      state.filteredValue = state.value;\n    },\n    setNewChef: state => {\n      state.filteredValue = state.value.filter(chef => chef.newChef === true);\n    },\n    setMostView: state => {\n      state.filteredValue = [...state.value].sort((a, b) => (b === null || b === void 0 ? void 0 : b.views) - (a === null || a === void 0 ? void 0 : a.views));\n    },\n    removeChef: (state, action) => {\n      state.filteredValue = action.payload;\n      state.value = action.payload;\n    }\n  }\n});\nexport const {\n  setAllchefs,\n  setNewChef,\n  setMostView,\n  removeChef\n} = chefSlice.actions;\nexport default chefSlice.reducer;","map":{"version":3,"names":["createSlice","data","response","fetch","method","json","console","log","err","chefs","chefSlice","name","initialState","value","filteredValue","reducers","setAllchefs","state","setNewChef","filter","chef","newChef","setMostView","sort","a","b","views","removeChef","action","payload","actions","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/chefSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { IChef } from '../../components/ChefPage/ChefPage';\r\n\r\nconst data = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/chef/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\n\r\nconst chefs: IChef[] = await data();\r\nexport const chefSlice = createSlice({\r\n\tname: 'chef',\r\n\tinitialState: {\r\n\t\tvalue: chefs,\r\n\t\tfilteredValue: chefs,\r\n\t},\r\n\treducers: {\r\n\t\tsetAllchefs: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t\tsetNewChef: (state) => {\r\n\t\t\tstate.filteredValue = state.value.filter((chef) => chef.newChef === true);\r\n\t\t},\r\n\t\tsetMostView: (state) => {\r\n\t\t\tstate.filteredValue = [...state.value].sort(\r\n\t\t\t\t(a: any, b: any) => b?.views - a?.views\r\n\t\t\t);\r\n\t\t},\r\n\t\tremoveChef: (state, action) => {\r\n\t\t\tstate.filteredValue = action.payload;\r\n\t\t\tstate.value = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setAllchefs, setNewChef, setMostView, removeChef } =\r\n\tchefSlice.actions;\r\n\r\nexport default chefSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,IAAI,GAAG,YAAY;EACxB,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC3DC,MAAM,EAAE;IACT,CAAC,CAAC;IACF,MAAMH,IAAI,GAAG,MAAMC,QAAQ,CAACG,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAOA,IAAI;EACZ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACbF,OAAO,CAACC,GAAG,EAAE;EACd;AACD,CAAC;AAED,MAAME,KAAc,GAAG,MAAMR,IAAI,EAAE;AACnC,OAAO,MAAMS,SAAS,GAAGV,WAAW,CAAC;EACpCW,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACbC,KAAK,EAAEJ,KAAK;IACZK,aAAa,EAAEL;EAChB,CAAC;EACDM,QAAQ,EAAE;IACTC,WAAW,EAAGC,KAAK,IAAK;MACvBA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK;IAClC,CAAC;IACDK,UAAU,EAAGD,KAAK,IAAK;MACtBA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAK,IAAI,CAAC;IAC1E,CAAC;IACDC,WAAW,EAAGL,KAAK,IAAK;MACvBA,KAAK,CAACH,aAAa,GAAG,CAAC,GAAGG,KAAK,CAACJ,KAAK,CAAC,CAACU,IAAI,CAC1C,CAACC,CAAM,EAAEC,CAAM,KAAK,CAAAA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC,KAAK,KAAGF,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEE,KAAK,EACvC;IACF,CAAC;IACDC,UAAU,EAAE,CAACV,KAAK,EAAEW,MAAM,KAAK;MAC9BX,KAAK,CAACH,aAAa,GAAGc,MAAM,CAACC,OAAO;MACpCZ,KAAK,CAACJ,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC7B;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb,WAAW;EAAEE,UAAU;EAAEI,WAAW;EAAEK;AAAW,CAAC,GAChEjB,SAAS,CAACoB,OAAO;AAElB,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}