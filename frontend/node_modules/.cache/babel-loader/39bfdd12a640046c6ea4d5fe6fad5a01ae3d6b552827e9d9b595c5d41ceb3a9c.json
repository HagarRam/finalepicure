{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hagar\\\\bootcamp\\\\finalepicure\\\\frontend\\\\src\\\\components\\\\AddRest\\\\AddRest.tsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRest = props => {\n  _s();\n  const dishesData = useSelector(state => state.dishes.value);\n  const [comment, setComment] = useState(['']);\n  const [informationDIsh, setinformationDIsh] = useState(['']);\n  const [quantity, setQuantity] = useState(0);\n  const [number, setNumber] = useState(0);\n  const paymentDetails = [{\n    id: 'name',\n    placeholder: '',\n    type: 'text',\n    title: 'Restaurant Name'\n  }, {\n    id: 'input-name-on-card',\n    placeholder: '',\n    type: 'text',\n    title: 'Chef Name'\n  }, {\n    id: 'input-cvv',\n    placeholder: '',\n    type: 'text',\n    title: 'CVV'\n  }, {\n    id: 'input-expiry-date',\n    placeholder: '',\n    type: 'text',\n    title: 'Open Hours'\n  }];\n  const renderInputs = inputFields => {\n    return inputFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"input-container\",\n      children: [field.title && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input-title\",\n        children: field.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input-full-Name\",\n        placeholder: field.placeholder,\n        type: field.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this));\n  };\n  const postInformation = () => {\n    return comment;\n    //to come back!!\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurants-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"restaurants-card-Modal\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: postInformation,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"closeButton\",\n            onClick: () => props.closeButton(),\n            className: \"close\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rest-information\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"details-information\",\n                children: renderInputs(paymentDetails)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              value: number,\n              id: \"add-rest-butoon\",\n              type: \"submit\",\n              onChange: e => setNumber(e.target.value),\n              children: \"ADD RESTAURANT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n_s(AddRest, \"jTveNH8+bEfhHR2Xf+skL+YkPrU=\", false, function () {\n  return [useSelector];\n});\n_c = AddRest;\nexport default AddRest;\n\n// interface InputField {\n// \tid: string;\n// \tplaceholder: string;\n// \ttype: string;\n// \ttitle?: string;\n// }\n\n// const CheckOutDetails: React.FC = () => {\n// \tconst deliveryDetails: InputField[] = [\n// \t\t{ id: 'input-full-name', placeholder: 'Full Name', type: 'text' },\n// \t\t{ id: 'input-address', placeholder: 'Address', type: 'text' },\n// \t\t{ id: 'input-phone', placeholder: 'Phone', type: 'text' },\n// \t];\n\n// \tconst paymentDetails: InputField[] = [\n// \t\t{\n// \t\t\tid: 'input-card-number',\n// \t\t\tplaceholder: '',\n// \t\t\ttype: 'text',\n// \t\t\ttitle: 'Card Number',\n// \t\t},\n// \t\t{\n// \t\t\tid: 'input-name-on-card',\n// \t\t\tplaceholder: '',\n// \t\t\ttype: 'text',\n// \t\t\ttitle: 'Name On Card',\n// \t\t},\n// \t\t{ id: 'input-cvv', placeholder: '', type: 'text', title: 'CVV' },\n// \t\t{\n// \t\t\tid: 'input-expiry-date',\n// \t\t\tplaceholder: '',\n// \t\t\ttype: 'text',\n// \t\t\ttitle: 'Expiry Date',\n// \t\t},\n// \t];\n\n// \tconst renderInputs = (inputFields: InputField[]) => {\n// \t\treturn inputFields.map((field) => (\n// \t\t\t<div\n// \t\t\t\tid=\"input-container\"\n// \t\t\t\tkey={field.id}>\n// \t\t\t\t{field.title && <div id=\"input-title\">{field.title}</div>}\n// \t\t\t\t<input\n// \t\t\t\t\tid=\"input-full-Name\"\n// \t\t\t\t\tplaceholder={field.placeholder}\n// \t\t\t\t\ttype={field.type}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t));\n// \t};\n\n// \treturn (\n// \t\t<div id=\"details-container\">\n// \t\t\t<div className=\"details-title\">\n// \t\t\t\t<div> DELIVERY DETAILS</div>\n// \t\t\t</div>\n// \t\t\t<div id=\"details-information\">{renderInputs(deliveryDetails)}</div>\n// \t\t\t<div\n// \t\t\t\tclassName=\"details-title\"\n// \t\t\t\tid=\"payment-title\">\n// \t\t\t\tPAYMENT DETAILS\n// \t\t\t</div>\n// \t\t\t<div id=\"details-information\">{renderInputs(paymentDetails)}</div>\n// \t\t</div>\n// \t);\n// };\nvar _c;\n$RefreshReg$(_c, \"AddRest\");","map":{"version":3,"names":["useSelector","React","useState","AddRest","props","dishesData","state","dishes","value","comment","setComment","informationDIsh","setinformationDIsh","quantity","setQuantity","number","setNumber","paymentDetails","id","placeholder","type","title","renderInputs","inputFields","map","field","postInformation","closeButton","e","target"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/components/AddRest/AddRest.tsx"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Rootstate } from '../../store/store';\r\n\r\ninterface IModal {\r\n\tcloseButton: Function;\r\n}\r\n\r\nconst AddRest: React.FC<IModal> = (props: IModal) => {\r\n\tconst dishesData = useSelector((state: Rootstate) => state.dishes.value);\r\n\tconst [comment, setComment] = useState<string[]>(['']);\r\n\tconst [informationDIsh, setinformationDIsh] = useState<string[]>(['']);\r\n\tconst [quantity, setQuantity] = useState<number>(0);\r\n\tconst [number, setNumber] = useState(0);\r\n\tinterface InputField {\r\n\t\tid: string;\r\n\t\tplaceholder: string;\r\n\t\ttype: string;\r\n\t\ttitle?: string;\r\n\t}\r\n\tconst paymentDetails: InputField[] = [\r\n\t\t{\r\n\t\t\tid: 'name',\r\n\t\t\tplaceholder: '',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Restaurant Name',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'input-name-on-card',\r\n\t\t\tplaceholder: '',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Chef Name',\r\n\t\t},\r\n\t\t{ id: 'input-cvv', placeholder: '', type: 'text', title: 'CVV' },\r\n\t\t{\r\n\t\t\tid: 'input-expiry-date',\r\n\t\t\tplaceholder: '',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Open Hours',\r\n\t\t},\r\n\t];\r\n\r\n\tconst renderInputs = (inputFields: InputField[]) => {\r\n\t\treturn inputFields.map((field) => (\r\n\t\t\t<div\r\n\t\t\t\tid=\"input-container\"\r\n\t\t\t\tkey={field.id}>\r\n\t\t\t\t{field.title && <div id=\"input-title\">{field.title}</div>}\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"input-full-Name\"\r\n\t\t\t\t\tplaceholder={field.placeholder}\r\n\t\t\t\t\ttype={field.type}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\r\n\tconst postInformation = () => {\r\n\t\treturn comment;\r\n\t\t//to come back!!\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"restaurants-card\">\r\n\t\t\t<div\r\n\t\t\t\tid=\"restaurants-card-Modal\"\r\n\t\t\t\tclassName=\"modal\">\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<form onSubmit={postInformation}>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tid=\"closeButton\"\r\n\t\t\t\t\t\t\tonClick={() => props.closeButton()}\r\n\t\t\t\t\t\t\tclassName=\"close\">\r\n\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"rest-information\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div id=\"details-information\">\r\n\t\t\t\t\t\t\t\t\t{renderInputs(paymentDetails)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\t\t\tid=\"add-rest-butoon\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => setNumber(e.target.value)}>\r\n\t\t\t\t\t\t\t\tADD RESTAURANT\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddRest;\r\n\r\n// interface InputField {\r\n// \tid: string;\r\n// \tplaceholder: string;\r\n// \ttype: string;\r\n// \ttitle?: string;\r\n// }\r\n\r\n// const CheckOutDetails: React.FC = () => {\r\n// \tconst deliveryDetails: InputField[] = [\r\n// \t\t{ id: 'input-full-name', placeholder: 'Full Name', type: 'text' },\r\n// \t\t{ id: 'input-address', placeholder: 'Address', type: 'text' },\r\n// \t\t{ id: 'input-phone', placeholder: 'Phone', type: 'text' },\r\n// \t];\r\n\r\n// \tconst paymentDetails: InputField[] = [\r\n// \t\t{\r\n// \t\t\tid: 'input-card-number',\r\n// \t\t\tplaceholder: '',\r\n// \t\t\ttype: 'text',\r\n// \t\t\ttitle: 'Card Number',\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\tid: 'input-name-on-card',\r\n// \t\t\tplaceholder: '',\r\n// \t\t\ttype: 'text',\r\n// \t\t\ttitle: 'Name On Card',\r\n// \t\t},\r\n// \t\t{ id: 'input-cvv', placeholder: '', type: 'text', title: 'CVV' },\r\n// \t\t{\r\n// \t\t\tid: 'input-expiry-date',\r\n// \t\t\tplaceholder: '',\r\n// \t\t\ttype: 'text',\r\n// \t\t\ttitle: 'Expiry Date',\r\n// \t\t},\r\n// \t];\r\n\r\n// \tconst renderInputs = (inputFields: InputField[]) => {\r\n// \t\treturn inputFields.map((field) => (\r\n// \t\t\t<div\r\n// \t\t\t\tid=\"input-container\"\r\n// \t\t\t\tkey={field.id}>\r\n// \t\t\t\t{field.title && <div id=\"input-title\">{field.title}</div>}\r\n// \t\t\t\t<input\r\n// \t\t\t\t\tid=\"input-full-Name\"\r\n// \t\t\t\t\tplaceholder={field.placeholder}\r\n// \t\t\t\t\ttype={field.type}\r\n// \t\t\t\t/>\r\n// \t\t\t</div>\r\n// \t\t));\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<div id=\"details-container\">\r\n// \t\t\t<div className=\"details-title\">\r\n// \t\t\t\t<div> DELIVERY DETAILS</div>\r\n// \t\t\t</div>\r\n// \t\t\t<div id=\"details-information\">{renderInputs(deliveryDetails)}</div>\r\n// \t\t\t<div\r\n// \t\t\t\tclassName=\"details-title\"\r\n// \t\t\t\tid=\"payment-title\">\r\n// \t\t\t\tPAYMENT DETAILS\r\n// \t\t\t</div>\r\n// \t\t\t<div id=\"details-information\">{renderInputs(paymentDetails)}</div>\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAAC;AAOnD,MAAMC,OAAyB,GAAIC,KAAa,IAAK;EAAA;EACpD,MAAMC,UAAU,GAAGL,WAAW,CAAEM,KAAgB,IAAKA,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAW,CAAC,EAAE,CAAC,CAAC;EACtD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAW,CAAC,EAAE,CAAC,CAAC;EACtE,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAS,CAAC,CAAC;EACnD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAOvC,MAAMe,cAA4B,GAAG,CACpC;IACCC,EAAE,EAAE,MAAM;IACVC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACR,CAAC,EACD;IACCH,EAAE,EAAE,oBAAoB;IACxBC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACR,CAAC,EACD;IAAEH,EAAE,EAAE,WAAW;IAAEC,WAAW,EAAE,EAAE;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChE;IACCH,EAAE,EAAE,mBAAmB;IACvBC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACR,CAAC,CACD;EAED,MAAMC,YAAY,GAAIC,WAAyB,IAAK;IACnD,OAAOA,WAAW,CAACC,GAAG,CAAEC,KAAK,iBAC5B;MACC,EAAE,EAAC,iBAAiB;MAAA,WAEnBA,KAAK,CAACJ,KAAK,iBAAI;QAAK,EAAE,EAAC,aAAa;QAAA,UAAEI,KAAK,CAACJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eACzD;QACC,EAAE,EAAC,iBAAiB;QACpB,WAAW,EAAEI,KAAK,CAACN,WAAY;QAC/B,IAAI,EAAEM,KAAK,CAACL;MAAK;QAAA;QAAA;QAAA;MAAA,QAChB;IAAA,GANGK,KAAK,CAACP,EAAE;MAAA;MAAA;MAAA;IAAA,QAQd,CAAC;EACH,CAAC;EAED,MAAMQ,eAAe,GAAG,MAAM;IAC7B,OAAOjB,OAAO;IACd;EACD,CAAC;;EAED,oBACC;IAAK,SAAS,EAAC,kBAAkB;IAAA,uBAChC;MACC,EAAE,EAAC,wBAAwB;MAC3B,SAAS,EAAC,OAAO;MAAA,uBACjB;QAAK,SAAS,EAAC,SAAS;QAAA,uBACvB;UAAM,QAAQ,EAAEiB,eAAgB;UAAA,wBAC/B;YACC,EAAE,EAAC,aAAa;YAChB,OAAO,EAAE,MAAMtB,KAAK,CAACuB,WAAW,EAAG;YACnC,SAAS,EAAC,OAAO;YAAA,UAAC;UAEnB;YAAA;YAAA;YAAA;UAAA,QAAO,eACP;YAAK,SAAS,EAAC,kBAAkB;YAAA,wBAChC;cAAA,uBACC;gBAAK,EAAE,EAAC,qBAAqB;gBAAA,UAC3BL,YAAY,CAACL,cAAc;cAAC;gBAAA;gBAAA;gBAAA;cAAA;YACxB;cAAA;cAAA;cAAA;YAAA,QACD,eACN;cACC,KAAK,EAAEF,MAAO;cACd,EAAE,EAAC,iBAAiB;cACpB,IAAI,EAAC,QAAQ;cACb,QAAQ,EAAGa,CAAM,IAAKZ,SAAS,CAACY,CAAC,CAACC,MAAM,CAACrB,KAAK,CAAE;cAAA,UAAC;YAElD;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QACJ;QAAA;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACD;AAER,CAAC;AAAC,GAtFIL,OAAyB;EAAA,QACXH,WAAW;AAAA;AAAA,KADzBG,OAAyB;AAwF/B,eAAeA,OAAO;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}