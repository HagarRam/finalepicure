{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hagar\\\\bootcamp\\\\finalepicure\\\\src\\\\components\\\\RestaurantFilterBar\\\\RestaurantFilterBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './RestaurantFilterBar.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAllRestuarants, setPopularRestuarants, setNewRestuarants, setOpenNow, setMap } from '../../store/slices/restaurantsSlice';\nimport MapContainer from '../MapView/MapContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantFilterBar = () => {\n  _s();\n  const dispatch = useDispatch();\n  const filteredRestaurants = useSelector(state => state.restaurants.filteredValue);\n  const [isActiveAll, setIsActiveAll] = useState(false);\n  const [isActiveNew, setIsActiveNew] = useState(false);\n  const [isActiveMost, setIsActiveMost] = useState(false);\n  const [isActiveOpen, setIsActiveOpen] = useState(false);\n  const [isActiveMap, setIsActiveMap] = useState(false);\n  const handleSetActive = active => {\n    setIsActiveAll(false);\n    setIsActiveNew(false);\n    setIsActiveMost(false);\n    setIsActiveOpen(false);\n    setIsActiveMap(false);\n    if (active === 'All') {\n      dispatch(setAllRestuarants());\n      setIsActiveAll(true);\n    } else if (active === 'New') {\n      dispatch(setNewRestuarants());\n      setIsActiveNew(true);\n    } else if (active === 'Most') {\n      dispatch(setPopularRestuarants());\n      setIsActiveMost(true);\n    } else if (active === 'Map') {\n      dispatch(setMap());\n      setIsActiveMap(true);\n    } else if (active === 'Open') {\n      dispatch(setOpenNow());\n      setIsActiveOpen(true);\n      const openNowRestaurants = getOpenNowRestaurants(filteredRestaurants);\n      setFilteredRestaurants(openNowRestaurants);\n    }\n  };\n  const getOpenNowRestaurants = restaurants => {\n    const date = new Date();\n    const hour = date.getHours();\n    const minutes = date.getMinutes();\n    const currentTime = hour + minutes / 60;\n    const openNowRestaurants = restaurants.filter(restaurant => {\n      var _restaurant$openHours, _restaurant$openHours2, _restaurant$openHours3, _restaurant$openHours4;\n      const openingTime = (_restaurant$openHours = restaurant.openHours) !== null && _restaurant$openHours !== void 0 && _restaurant$openHours[0] ? parseFloat((_restaurant$openHours2 = restaurant.openHours) === null || _restaurant$openHours2 === void 0 ? void 0 : _restaurant$openHours2[0].replace(':', '.')) : undefined;\n      const closingTime = (_restaurant$openHours3 = restaurant.openHours) !== null && _restaurant$openHours3 !== void 0 && _restaurant$openHours3[1] ? parseFloat((_restaurant$openHours4 = restaurant.openHours) === null || _restaurant$openHours4 === void 0 ? void 0 : _restaurant$openHours4[1].replace(':', '.')) : undefined;\n      if (openingTime && closingTime && openingTime <= currentTime && closingTime >= currentTime) {\n        return true;\n      } else {\n        console.log(`${restaurant.name} is closed`);\n        return false;\n      }\n    });\n    return openNowRestaurants;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"FilterRestaurant\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: isActiveAll ? 'filter-button' : 'without-filter-button',\n      onClick: () => handleSetActive('All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: isActiveNew ? 'filter-button' : 'without-filter-button',\n      onClick: () => handleSetActive('New'),\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: isActiveMost ? 'filter-button' : 'without-filter-button',\n      onClick: () => handleSetActive('Most'),\n      children: \"Most Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: isActiveOpen ? 'filter-button' : 'without-filter-button',\n      onClick: () => handleSetActive('Open'),\n      children: \"Open Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: isActiveMap ? 'filter-button' : 'without-filter-button',\n      onClick: () => handleSetActive('Map'),\n      children: \"Map View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), isActiveMap && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Map-Container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        lat: 0,\n        lng: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n};\n_s(RestaurantFilterBar, \"HdcANwQte/YrBAD6t6u3yJrYDoA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RestaurantFilterBar;\nexport default RestaurantFilterBar;\nvar _c;\n$RefreshReg$(_c, \"RestaurantFilterBar\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setAllRestuarants","setPopularRestuarants","setNewRestuarants","setOpenNow","setMap","MapContainer","RestaurantFilterBar","dispatch","filteredRestaurants","state","restaurants","filteredValue","isActiveAll","setIsActiveAll","isActiveNew","setIsActiveNew","isActiveMost","setIsActiveMost","isActiveOpen","setIsActiveOpen","isActiveMap","setIsActiveMap","handleSetActive","active","openNowRestaurants","getOpenNowRestaurants","setFilteredRestaurants","date","Date","hour","getHours","minutes","getMinutes","currentTime","filter","restaurant","openingTime","openHours","parseFloat","replace","undefined","closingTime","console","log","name"],"sources":["C:/Users/hagar/bootcamp/finalepicure/src/components/RestaurantFilterBar/RestaurantFilterBar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './RestaurantFilterBar.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n\tsetAllRestuarants,\r\n\tsetPopularRestuarants,\r\n\tsetNewRestuarants,\r\n\tsetOpenNow,\r\n\tsetMap,\r\n} from '../../store/slices/restaurantsSlice';\r\nimport MapContainer from '../MapView/MapContainer';\r\nimport { IRestaurants } from '../RestaurantPage/RestaurantPage';\r\nimport { Rootstate } from '../../store/store';\r\n\r\nconst RestaurantFilterBar: React.FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst filteredRestaurants = useSelector(\r\n\t\t(state: Rootstate) => state.restaurants.filteredValue\r\n\t);\r\n\tconst [isActiveAll, setIsActiveAll] = useState(false);\r\n\tconst [isActiveNew, setIsActiveNew] = useState(false);\r\n\tconst [isActiveMost, setIsActiveMost] = useState(false);\r\n\tconst [isActiveOpen, setIsActiveOpen] = useState(false);\r\n\tconst [isActiveMap, setIsActiveMap] = useState(false);\r\n\r\n\tconst handleSetActive = (active: string) => {\r\n\t\tsetIsActiveAll(false);\r\n\t\tsetIsActiveNew(false);\r\n\t\tsetIsActiveMost(false);\r\n\t\tsetIsActiveOpen(false);\r\n\t\tsetIsActiveMap(false);\r\n\r\n\t\tif (active === 'All') {\r\n\t\t\tdispatch(setAllRestuarants());\r\n\t\t\tsetIsActiveAll(true);\r\n\t\t} else if (active === 'New') {\r\n\t\t\tdispatch(setNewRestuarants());\r\n\t\t\tsetIsActiveNew(true);\r\n\t\t} else if (active === 'Most') {\r\n\t\t\tdispatch(setPopularRestuarants());\r\n\t\t\tsetIsActiveMost(true);\r\n\t\t} else if (active === 'Map') {\r\n\t\t\tdispatch(setMap());\r\n\t\t\tsetIsActiveMap(true);\r\n\t\t} else if (active === 'Open') {\r\n\t\t\tdispatch(setOpenNow());\r\n\t\t\tsetIsActiveOpen(true);\r\n\t\t\tconst openNowRestaurants = getOpenNowRestaurants(filteredRestaurants);\r\n\t\t\tsetFilteredRestaurants(openNowRestaurants);\r\n\t\t}\r\n\t};\r\n\tconst getOpenNowRestaurants = (restaurants: IRestaurants[]) => {\r\n\t\tconst date = new Date();\r\n\t\tconst hour = date.getHours();\r\n\t\tconst minutes = date.getMinutes();\r\n\t\tconst currentTime = hour + minutes / 60;\r\n\r\n\t\tconst openNowRestaurants = restaurants.filter((restaurant) => {\r\n\t\t\tconst openingTime = restaurant.openHours?.[0]\r\n\t\t\t\t? parseFloat(restaurant.openHours?.[0].replace(':', '.'))\r\n\t\t\t\t: undefined;\r\n\t\t\tconst closingTime = restaurant.openHours?.[1]\r\n\t\t\t\t? parseFloat(restaurant.openHours?.[1].replace(':', '.'))\r\n\t\t\t\t: undefined;\r\n\t\t\tif (\r\n\t\t\t\topeningTime &&\r\n\t\t\t\tclosingTime &&\r\n\t\t\t\topeningTime <= currentTime &&\r\n\t\t\t\tclosingTime >= currentTime\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(`${restaurant.name} is closed`);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn openNowRestaurants;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"FilterRestaurant\">\r\n\t\t\t<button\r\n\t\t\t\tclassName={isActiveAll ? 'filter-button' : 'without-filter-button'}\r\n\t\t\t\tonClick={() => handleSetActive('All')}>\r\n\t\t\t\tAll\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={isActiveNew ? 'filter-button' : 'without-filter-button'}\r\n\t\t\t\tonClick={() => handleSetActive('New')}>\r\n\t\t\t\tNew\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={isActiveMost ? 'filter-button' : 'without-filter-button'}\r\n\t\t\t\tonClick={() => handleSetActive('Most')}>\r\n\t\t\t\tMost Popular\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={isActiveOpen ? 'filter-button' : 'without-filter-button'}\r\n\t\t\t\tonClick={() => handleSetActive('Open')}>\r\n\t\t\t\tOpen Now\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={isActiveMap ? 'filter-button' : 'without-filter-button'}\r\n\t\t\t\tonClick={() => handleSetActive('Map')}>\r\n\t\t\t\tMap View\r\n\t\t\t</button>\r\n\t\t\t{isActiveMap && (\r\n\t\t\t\t<div className=\"Map-Container\">\r\n\t\t\t\t\t<MapContainer\r\n\t\t\t\t\t\tlat={0}\r\n\t\t\t\t\t\tlng={0}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RestaurantFilterBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}