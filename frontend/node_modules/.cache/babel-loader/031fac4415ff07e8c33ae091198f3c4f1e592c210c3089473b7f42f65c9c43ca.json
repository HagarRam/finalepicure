{"ast":null,"code":"// import { createSlice } from '@reduxjs/toolkit';\n// import { useState } from 'react';\n\n// export interface IActive {\n// \temail: string;\n// \tpassword: string;\n// \ttoken?: string;\n// \tconnect?: boolean;\n// }\n\n// const data = async () => {\n// \ttry {\n// \t\tconst response = await fetch('http://localhost:8000/login', {\n// \t\t\tmethod: 'GET',\n// \t\t});\n// \t\tconst data = await response.json();\n// \t\tconsole.log(data);\n// \t\treturn data;\n// \t} catch (err) {\n// \t\tconsole.log();\n// \t}\n// };\n\n// const active: IActive[] = await data();\n\n// export const activeUsers = createSlice({\n// \tname: 'active-users',\n// \tinitialState: {\n// \t\tvalue: active,\n// \t\tfilteredValue: active,\n// \t},\n// \treducers: {\n// \t\tcreateOrder: (state) => {\n// \t\t\tstate.filteredValue = state.value;\n// \t\t},\n// \t},\n// });\n\n// export default activeUsers.reducer;\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: [],\n  filteredValue: []\n};\nexport const activeUsers = createSlice({\n  name: 'active-users',\n  initialState,\n  reducers: {\n    setActiveUsers: (state, action) => {\n      state.value = action.payload;\n      state.filteredValue = action.payload;\n    }\n  }\n});\nexport const {\n  setActiveUsers\n} = activeUsers.actions;\nexport default activeUsers.reducer;","map":{"version":3,"names":["createSlice","initialState","value","filteredValue","activeUsers","name","reducers","setActiveUsers","state","action","payload","actions","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/activeUsers.tsx"],"sourcesContent":["// import { createSlice } from '@reduxjs/toolkit';\r\n// import { useState } from 'react';\r\n\r\n// export interface IActive {\r\n// \temail: string;\r\n// \tpassword: string;\r\n// \ttoken?: string;\r\n// \tconnect?: boolean;\r\n// }\r\n\r\n// const data = async () => {\r\n// \ttry {\r\n// \t\tconst response = await fetch('http://localhost:8000/login', {\r\n// \t\t\tmethod: 'GET',\r\n// \t\t});\r\n// \t\tconst data = await response.json();\r\n// \t\tconsole.log(data);\r\n// \t\treturn data;\r\n// \t} catch (err) {\r\n// \t\tconsole.log();\r\n// \t}\r\n// };\r\n\r\n// const active: IActive[] = await data();\r\n\r\n// export const activeUsers = createSlice({\r\n// \tname: 'active-users',\r\n// \tinitialState: {\r\n// \t\tvalue: active,\r\n// \t\tfilteredValue: active,\r\n// \t},\r\n// \treducers: {\r\n// \t\tcreateOrder: (state) => {\r\n// \t\t\tstate.filteredValue = state.value;\r\n// \t\t},\r\n// \t},\r\n// });\r\n\r\n// export default activeUsers.reducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport interface IActive {\r\n\temail: string;\r\n\tpassword: string;\r\n\ttoken?: string;\r\n\tconnect?: boolean;\r\n}\r\n\r\ninterface IActiveUsersState {\r\n\tvalue: IActive[];\r\n\tfilteredValue: IActive[];\r\n}\r\n\r\nconst initialState: IActiveUsersState = {\r\n\tvalue: [],\r\n\tfilteredValue: [],\r\n};\r\n\r\nexport const activeUsers = createSlice({\r\n\tname: 'active-users',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetActiveUsers: (state, action) => {\r\n\t\t\tstate.value = action.payload;\r\n\t\t\tstate.filteredValue = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setActiveUsers } = activeUsers.actions;\r\n\r\nexport default activeUsers.reducer;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAc9C,MAAMC,YAA+B,GAAG;EACvCC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGJ,WAAW,CAAC;EACtCK,IAAI,EAAE,cAAc;EACpBJ,YAAY;EACZK,QAAQ,EAAE;IACTC,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACL,aAAa,GAAGM,MAAM,CAACC,OAAO;IACrC;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAe,CAAC,GAAGH,WAAW,CAACO,OAAO;AAErD,eAAeP,WAAW,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}