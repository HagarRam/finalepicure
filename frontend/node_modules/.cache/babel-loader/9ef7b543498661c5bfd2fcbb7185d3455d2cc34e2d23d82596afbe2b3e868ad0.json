{"ast":null,"code":"// import { createSlice } from '@reduxjs/toolkit';\n// import { IChef } from '../../components/ChefPage/ChefPage';\n// import data from '../../data.json';\n\n// const data3 = fetch('http://localhost:8000/chef/', {\n// \tmethod: 'GET',\n// })\n// \t.then((response) => response.json())\n// \t.then((data: IChef[]) => {\n// \t\tconsole.log(data); // This will log the result of the fetch request\n// \t\treturn data;\n// \t})\n// \t.catch((err) => {\n// \t\tconsole.log(err.message);\n// \t});\n\n// export const chefSlice = createSlice({\n// \tname: 'chef',\n// \tinitialState: {\n// \t\tvalue: [] as IChef[],\n// \t\tfilteredValue: [] as IChef[],\n// \t},\n// \treducers: {\n// \t\tsetAllchefs: (state) => {\n// \t\t\tstate.filteredValue = state.value;\n// \t\t},\n// \t\tsetNewChef: (state) => {\n// \t\t\tstate.filteredValue = state.value.filter((chef) => chef.newChef === true);\n// \t\t},\n// \t\tsetMostView: (state) => {\n// \t\t\tstate.filteredValue = [...state.value].sort(\n// \t\t\t\t(a: any, b: any) => b?.views - a?.views\n// \t\t\t);\n// \t\t},\n// \t},\n// });\n\n// // Action creators are generated for each case reducer function\n// export const { setAllchefs, setNewChef, setMostView } = chefSlice.actions;\n\n// export default chefSlice.reducer;\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst data3 = fetch('http://localhost:8000/chef/', {\n  method: 'GET'\n}).then(response => response.json()).then(data => {\n  console.log(data); // This will log the result of the fetch request\n  return data;\n}).catch(err => {\n  console.log(err.message);\n});\nexport const chefSlice = createSlice({\n  name: 'chef',\n  initialState: {\n    value: [],\n    filteredValue: []\n  },\n  reducers: {\n    setAllchefs: state => {\n      state.filteredValue = state.value;\n    },\n    setNewChef: state => {\n      state.filteredValue = state.value.filter(chef => chef.newChef === true);\n    },\n    setMostView: state => {\n      state.filteredValue = [...state.value].sort((a, b) => (b === null || b === void 0 ? void 0 : b.views) - (a === null || a === void 0 ? void 0 : a.views));\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setAllchefs,\n  setNewChef,\n  setMostView\n} = chefSlice.actions;\nexport default chefSlice.reducer;","map":{"version":3,"names":["createSlice","data3","fetch","method","then","response","json","data","console","log","catch","err","message","chefSlice","name","initialState","value","filteredValue","reducers","setAllchefs","state","setNewChef","filter","chef","newChef","setMostView","sort","a","b","views","actions","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/chefSlice.tsx"],"sourcesContent":["// import { createSlice } from '@reduxjs/toolkit';\r\n// import { IChef } from '../../components/ChefPage/ChefPage';\r\n// import data from '../../data.json';\r\n\r\n// const data3 = fetch('http://localhost:8000/chef/', {\r\n// \tmethod: 'GET',\r\n// })\r\n// \t.then((response) => response.json())\r\n// \t.then((data: IChef[]) => {\r\n// \t\tconsole.log(data); // This will log the result of the fetch request\r\n// \t\treturn data;\r\n// \t})\r\n// \t.catch((err) => {\r\n// \t\tconsole.log(err.message);\r\n// \t});\r\n\r\n// export const chefSlice = createSlice({\r\n// \tname: 'chef',\r\n// \tinitialState: {\r\n// \t\tvalue: [] as IChef[],\r\n// \t\tfilteredValue: [] as IChef[],\r\n// \t},\r\n// \treducers: {\r\n// \t\tsetAllchefs: (state) => {\r\n// \t\t\tstate.filteredValue = state.value;\r\n// \t\t},\r\n// \t\tsetNewChef: (state) => {\r\n// \t\t\tstate.filteredValue = state.value.filter((chef) => chef.newChef === true);\r\n// \t\t},\r\n// \t\tsetMostView: (state) => {\r\n// \t\t\tstate.filteredValue = [...state.value].sort(\r\n// \t\t\t\t(a: any, b: any) => b?.views - a?.views\r\n// \t\t\t);\r\n// \t\t},\r\n// \t},\r\n// });\r\n\r\n// // Action creators are generated for each case reducer function\r\n// export const { setAllchefs, setNewChef, setMostView } = chefSlice.actions;\r\n\r\n// export default chefSlice.reducer;\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { IChef } from '../../components/ChefPage/ChefPage';\r\nimport data from '../../data.json';\r\n\r\nconst data3 = fetch('http://localhost:8000/chef/', {\r\n\tmethod: 'GET',\r\n})\r\n\t.then((response) => response.json())\r\n\t.then((data: IChef[]) => {\r\n\t\tconsole.log(data); // This will log the result of the fetch request\r\n\t\treturn data;\r\n\t})\r\n\t.catch((err) => {\r\n\t\tconsole.log(err.message);\r\n\t});\r\n\r\nexport const chefSlice = createSlice({\r\n\tname: 'chef',\r\n\tinitialState: {\r\n\t\tvalue: [] as IChef[],\r\n\t\tfilteredValue: [] as IChef[],\r\n\t},\r\n\treducers: {\r\n\t\tsetAllchefs: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t\tsetNewChef: (state) => {\r\n\t\t\tstate.filteredValue = state.value.filter((chef) => chef.newChef === true);\r\n\t\t},\r\n\t\tsetMostView: (state) => {\r\n\t\t\tstate.filteredValue = [...state.value].sort(\r\n\t\t\t\t(a: any, b: any) => b?.views - a?.views\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setAllchefs, setNewChef, setMostView } = chefSlice.actions;\r\n\r\nexport default chefSlice.reducer;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAI9C,MAAMC,KAAK,GAAGC,KAAK,CAAC,6BAA6B,EAAE;EAClDC,MAAM,EAAE;AACT,CAAC,CAAC,CACAC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAa,IAAK;EACxBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;EACnB,OAAOA,IAAI;AACZ,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;EACfH,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,OAAO,CAAC;AACzB,CAAC,CAAC;AAEH,OAAO,MAAMC,SAAS,GAAGb,WAAW,CAAC;EACpCc,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACbC,KAAK,EAAE,EAAa;IACpBC,aAAa,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACTC,WAAW,EAAGC,KAAK,IAAK;MACvBA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK;IAClC,CAAC;IACDK,UAAU,EAAGD,KAAK,IAAK;MACtBA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAK,IAAI,CAAC;IAC1E,CAAC;IACDC,WAAW,EAAGL,KAAK,IAAK;MACvBA,KAAK,CAACH,aAAa,GAAG,CAAC,GAAGG,KAAK,CAACJ,KAAK,CAAC,CAACU,IAAI,CAC1C,CAACC,CAAM,EAAEC,CAAM,KAAK,CAAAA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC,KAAK,KAAGF,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEE,KAAK,EACvC;IACF;EACD;AACD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEV,WAAW;EAAEE,UAAU;EAAEI;AAAY,CAAC,GAAGZ,SAAS,CAACiB,OAAO;AAEzE,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}