{"ast":null,"code":"const checkIfRestaurantIsOpen = restaurant => {\n  var _restaurant$openHours, _restaurant$openHours2, _restaurant$openHours3, _restaurant$openHours4;\n  console.log('checkIfRestaurantIsOpen');\n  const date = new Date();\n  const hour = date.getHours();\n  const minutes = date.getMinutes();\n  const currentTime = hour + minutes / 60;\n  // console.log(currentTime);\n  const openingTime = (_restaurant$openHours = restaurant.openHours) !== null && _restaurant$openHours !== void 0 && _restaurant$openHours[0] ? parseFloat((_restaurant$openHours2 = restaurant.openHours) === null || _restaurant$openHours2 === void 0 ? void 0 : _restaurant$openHours2[0].replace(':', '.')) : undefined;\n  const closingTime = (_restaurant$openHours3 = restaurant.openHours) !== null && _restaurant$openHours3 !== void 0 && _restaurant$openHours3[1] ? parseFloat((_restaurant$openHours4 = restaurant.openHours) === null || _restaurant$openHours4 === void 0 ? void 0 : _restaurant$openHours4[1].replace(':', '.')) : undefined;\n  console.log(openingTime);\n  console.log(closingTime);\n  return openingTime && closingTime && openingTime <= currentTime && closingTime >= currentTime;\n};\nexport default checkIfRestaurantIsOpen;","map":{"version":3,"names":["checkIfRestaurantIsOpen","restaurant","console","log","date","Date","hour","getHours","minutes","getMinutes","currentTime","openingTime","openHours","parseFloat","replace","undefined","closingTime"],"sources":["C:/Users/hagar/bootcamp/finalepicure/src/components/OpenClose/OpenClose.ts"],"sourcesContent":["import { IRestaurants } from '../RestaurantPage/RestaurantPage';\r\n\r\nconst checkIfRestaurantIsOpen = (restaurant: IRestaurants) => {\r\n\tconsole.log('checkIfRestaurantIsOpen');\r\n\r\n\tconst date = new Date();\r\n\tconst hour = date.getHours();\r\n\tconst minutes = date.getMinutes();\r\n\tconst currentTime = hour + minutes / 60;\r\n\t// console.log(currentTime);\r\n\tconst openingTime = restaurant.openHours?.[0]\r\n\t\t? parseFloat(restaurant.openHours?.[0].replace(':', '.'))\r\n\t\t: undefined;\r\n\tconst closingTime = restaurant.openHours?.[1]\r\n\t\t? parseFloat(restaurant.openHours?.[1].replace(':', '.'))\r\n\t\t: undefined;\r\n\tconsole.log(openingTime);\r\n\tconsole.log(closingTime);\r\n\r\n\treturn (\r\n\t\topeningTime &&\r\n\t\tclosingTime &&\r\n\t\topeningTime <= currentTime &&\r\n\t\tclosingTime >= currentTime\r\n\t);\r\n};\r\n\r\nexport default checkIfRestaurantIsOpen;\r\n"],"mappings":"AAEA,MAAMA,uBAAuB,GAAIC,UAAwB,IAAK;EAAA;EAC7DC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAEtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB,MAAMC,IAAI,GAAGF,IAAI,CAACG,QAAQ,EAAE;EAC5B,MAAMC,OAAO,GAAGJ,IAAI,CAACK,UAAU,EAAE;EACjC,MAAMC,WAAW,GAAGJ,IAAI,GAAGE,OAAO,GAAG,EAAE;EACvC;EACA,MAAMG,WAAW,GAAG,yBAAAV,UAAU,CAACW,SAAS,kDAApB,sBAAuB,CAAC,CAAC,GAC1CC,UAAU,2BAACZ,UAAU,CAACW,SAAS,2DAApB,uBAAuB,CAAC,CAAC,CAACE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GACvDC,SAAS;EACZ,MAAMC,WAAW,GAAG,0BAAAf,UAAU,CAACW,SAAS,mDAApB,uBAAuB,CAAC,CAAC,GAC1CC,UAAU,2BAACZ,UAAU,CAACW,SAAS,2DAApB,uBAAuB,CAAC,CAAC,CAACE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GACvDC,SAAS;EACZb,OAAO,CAACC,GAAG,CAACQ,WAAW,CAAC;EACxBT,OAAO,CAACC,GAAG,CAACa,WAAW,CAAC;EAExB,OACCL,WAAW,IACXK,WAAW,IACXL,WAAW,IAAID,WAAW,IAC1BM,WAAW,IAAIN,WAAW;AAE5B,CAAC;AAED,eAAeV,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}