{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hagar\\\\Downloads\\\\Epicure-Project (2)\\\\Epicure-Project\\\\Epicure-Project\\\\src\\\\components\\\\MapView\\\\MapContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { GoogleApiWrapper, Map } from 'google-maps-react';\n// import { updateImportEqualsDeclaration } from 'typescript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = props => {\n  _s();\n  const mapStyles = {\n    width: '100%',\n    height: '100%'\n  };\n\n  // Get the data from the Redux slice using useSelector hook\n  const {\n    locationLat,\n    locationLng\n  } = useSelector(state => state.restaurants.filteredValue);\n  const data = useSelector(state => state.restaurants.value);\n  console.log(data);\n  data.map(restaurant => {\n    const lat = restaurant.loctionLat;\n    const lng = restaurant.loctionLng;\n    const location = {\n      lng,\n      lat\n    };\n    console.log(location);\n    // Do something with the location object\n  });\n\n  const initialCenter = {\n    lat: locationLat,\n    lng: locationLng\n  };\n  const mapProps = {\n    google: props.google,\n    zoom: 14,\n    style: mapStyles,\n    initialCenter\n  };\n  return /*#__PURE__*/_jsxDEV(Map, {\n    ...mapProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n_s(MapContainer, \"wuaNNUV8sYrTgdyR/RiHYSO3LZY=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = MapContainer;\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''\n})(MapContainer);\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["useSelector","GoogleApiWrapper","Map","MapContainer","props","mapStyles","width","height","locationLat","locationLng","state","restaurants","filteredValue","data","value","console","log","map","restaurant","lat","loctionLat","lng","loctionLng","location","initialCenter","mapProps","google","zoom","style","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY"],"sources":["C:/Users/hagar/Downloads/Epicure-Project (2)/Epicure-Project/Epicure-Project/src/components/MapView/MapContainer.tsx"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { GoogleApiWrapper, Map, IMapProps } from 'google-maps-react';\r\n// import { updateImportEqualsDeclaration } from 'typescript';\r\n\r\ninterface IMapContainerProps {\r\n  google: any;\r\n  lat: number;\r\n  lng: number;\r\n}\r\ninterface ILocation {\r\n  lat: number;\r\n  lng:number;\r\n}\r\nconst MapContainer: React.FC<IMapContainerProps> = (props) => {\r\n  const mapStyles = {\r\n    width: '100%',\r\n    height: '100%',\r\n  };\r\n\r\n  // Get the data from the Redux slice using useSelector hook\r\n  const { locationLat, locationLng } = useSelector((state: any) => state.restaurants.filteredValue);\r\n  const data = useSelector((state: any) => state.restaurants.value);\r\n  console.log(data);\r\n\r\n  data.map((restaurant: any) => {\r\n    const lat = restaurant.loctionLat;\r\n    const lng = restaurant.loctionLng;\r\n    const location: ILocation = { lng, lat };\r\n    console.log(location);\r\n    // Do something with the location object\r\n  });\r\n  \r\n  \r\n\r\n  const initialCenter = {\r\n    lat: locationLat,\r\n    lng: locationLng,\r\n  };\r\n\r\n  const mapProps: IMapProps = {\r\n    google: props.google,\r\n    zoom: 14,\r\n    style: mapStyles,\r\n    initialCenter,\r\n  };\r\n\r\n  return <Map {...mapProps} />;\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\r\n})(MapContainer);"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,EAAEC,GAAG,QAAmB,mBAAmB;AACpE;AAAA;AAWA,MAAMC,YAA0C,GAAIC,KAAK,IAAK;EAAA;EAC5D,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;;EAED;EACA,MAAM;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGT,WAAW,CAAEU,KAAU,IAAKA,KAAK,CAACC,WAAW,CAACC,aAAa,CAAC;EACjG,MAAMC,IAAI,GAAGb,WAAW,CAAEU,KAAU,IAAKA,KAAK,CAACC,WAAW,CAACG,KAAK,CAAC;EACjEC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjBA,IAAI,CAACI,GAAG,CAAEC,UAAe,IAAK;IAC5B,MAAMC,GAAG,GAAGD,UAAU,CAACE,UAAU;IACjC,MAAMC,GAAG,GAAGH,UAAU,CAACI,UAAU;IACjC,MAAMC,QAAmB,GAAG;MAAEF,GAAG;MAAEF;IAAI,CAAC;IACxCJ,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;IACrB;EACF,CAAC,CAAC;;EAIF,MAAMC,aAAa,GAAG;IACpBL,GAAG,EAAEX,WAAW;IAChBa,GAAG,EAAEZ;EACP,CAAC;EAED,MAAMgB,QAAmB,GAAG;IAC1BC,MAAM,EAAEtB,KAAK,CAACsB,MAAM;IACpBC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAEvB,SAAS;IAChBmB;EACF,CAAC;EAED,oBAAO,QAAC,GAAG;IAAA,GAAKC;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAI;AAC9B,CAAC;AAAC,GAlCItB,YAA0C;EAAA,QAOTH,WAAW,EACnCA,WAAW;AAAA;AAAA,KARpBG,YAA0C;AAoChD,eAAeF,gBAAgB,CAAC;EAC9B4B,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,IAAI;AACvD,CAAC,CAAC,CAAC7B,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}