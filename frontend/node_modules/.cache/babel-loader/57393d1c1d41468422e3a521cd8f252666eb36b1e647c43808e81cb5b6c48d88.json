{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hagar\\\\bootcamp\\\\finalepicure\\\\frontend\\\\src\\\\components\\\\OneChef\\\\OneChef.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport RestaurantCard from '../PopularRestaurants/RestaurantCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Footer from '../Footer/Footer';\nimport NavBar from '../NavBar/NavBar';\nimport ImageChef from '../ImageCard/ImageCard';\nimport { removeChef } from '../../store/slices/chefSlice';\nimport './OneChef.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OneChef = () => {\n  _s();\n  var _IdNum$restaurant;\n  const restaurantsData = useSelector(state => state.restaurants.filteredValue);\n  console.log(restaurantsData);\n  const chefData = useSelector(state => state.chef.filteredValue);\n  const [deleteChefed, setDeleteChefed] = useState(null);\n  let {\n    id\n  } = useParams();\n  const IdNum = chefData === null || chefData === void 0 ? void 0 : chefData.find(rest => {\n    var _rest$_id;\n    return ((_rest$_id = rest._id) === null || _rest$_id === void 0 ? void 0 : _rest$_id.toString()) === id;\n  });\n  console.log(IdNum);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setDeleteChefed(IdNum);\n  }, [chefData, IdNum]);\n  const deletechef = async id => {\n    try {\n      const response = await fetch(`http://localhost:8000/chef`, {\n        method: 'DELETE',\n        body: JSON.stringify({\n          id: id\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n      console.log(data.data);\n      dispatch(removeChef(data.data));\n      navigate('/chefsPage');\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  };\n  const handleRegister = async id => {\n    if (window.confirm(`Are you sure you want to delete?`)) {\n      await deletechef(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"restaurant-page \",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"information-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"delete\",\n        onClick: () => handleRegister(deleteChefed._id),\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chef-of-the-page\",\n        children: IdNum ? /*#__PURE__*/_jsxDEV(ImageChef, {\n          name: IdNum.name,\n          img: IdNum.img,\n          id: IdNum.id,\n          _id: IdNum._id\n        }, IdNum.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"chef not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), \"// Render a list of restaurants based on an array of restaurant IDs\", /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chef-restaurants\",\n        children: IdNum === null || IdNum === void 0 ? void 0 : (_IdNum$restaurant = IdNum.restaurant) === null || _IdNum$restaurant === void 0 ? void 0 : _IdNum$restaurant.map(chef => {\n          console.log(chef);\n          const data = restaurantsData.filter(rest => rest._id === chef);\n          if (data.length === 0) {\n            return null; // or some other fallback if there are no matching restaurants\n          }\n\n          return data.map(restData => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n            img: restData.img,\n            name: restData.name,\n            chef: restData.chef,\n            rating: restData.rating,\n            title: 'chef-rest-page',\n            id: restData.id,\n            titleStar: 'restautant-page-stars',\n            titleImg: 'chef-rest-image',\n            _id: restData._id\n          }, restData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 8\n          }, this));\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n};\n_s(OneChef, \"vfC2MGcQC7I7+wBcXNwtWPmXg5M=\", false, function () {\n  return [useSelector, useSelector, useParams, useNavigate, useDispatch];\n});\n_c = OneChef;\nexport default OneChef;\nvar _c;\n$RefreshReg$(_c, \"OneChef\");","map":{"version":3,"names":["React","useEffect","useState","RestaurantCard","useDispatch","useSelector","useNavigate","useParams","Footer","NavBar","ImageChef","removeChef","OneChef","restaurantsData","state","restaurants","filteredValue","console","log","chefData","chef","deleteChefed","setDeleteChefed","id","IdNum","find","rest","_id","toString","navigate","dispatch","deletechef","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","err","error","handleRegister","window","confirm","name","img","restaurant","map","filter","length","restData","rating"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/components/OneChef/OneChef.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport RestaurantCard from '../PopularRestaurants/RestaurantCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Footer from '../Footer/Footer';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport { Rootstate } from '../../store/store';\r\nimport ImageChef from '../ImageCard/ImageCard';\r\nimport { removeChef } from '../../store/slices/chefSlice';\r\nimport './OneChef.css';\r\nimport { IChef } from '../ChefPage/ChefPage';\r\nimport { IRestaurants } from '../RestaurantPage/RestaurantPage';\r\nimport { ObjectId } from 'mongoose';\r\n\r\nconst OneChef: React.FC = () => {\r\n\tconst restaurantsData = useSelector(\r\n\t\t(state: Rootstate) => state.restaurants.filteredValue\r\n\t);\r\n\tconsole.log(restaurantsData);\r\n\tconst chefData = useSelector((state: Rootstate) => state.chef.filteredValue);\r\n\tconst [deleteChefed, setDeleteChefed] = useState<any>(null);\r\n\tlet { id } = useParams<string>();\r\n\r\n\tconst IdNum: IChef | undefined = chefData?.find((rest: IChef) => {\r\n\t\treturn rest._id?.toString() === id;\r\n\t});\r\n\r\n\tconsole.log(IdNum);\r\n\tconst navigate = useNavigate();\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => {\r\n\t\tsetDeleteChefed(IdNum);\r\n\t}, [chefData, IdNum]);\r\n\r\n\tconst deletechef = async (id: string) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`http://localhost:8000/chef`, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(data.message);\r\n\t\t\t}\r\n\t\t\tconsole.log(data.data);\r\n\r\n\t\t\tdispatch(removeChef(data.data));\r\n\t\t\tnavigate('/chefsPage');\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t};\r\n\tconst handleRegister = async (id: string) => {\r\n\t\tif (window.confirm(`Are you sure you want to delete?`)) {\r\n\t\t\tawait deletechef(id);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"restaurant-page \">\r\n\t\t\t<NavBar />\r\n\t\t\t<div id=\"information-page\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"delete\"\r\n\t\t\t\t\tonClick={() => handleRegister(deleteChefed._id)}>\r\n\t\t\t\t\tDELETE\r\n\t\t\t\t</button>\r\n\t\t\t\t<div id=\"chef-of-the-page\">\r\n\t\t\t\t\t{IdNum ? (\r\n\t\t\t\t\t\t<ImageChef\r\n\t\t\t\t\t\t\tname={IdNum.name}\r\n\t\t\t\t\t\t\timg={IdNum.img}\r\n\t\t\t\t\t\t\tid={IdNum.id}\r\n\t\t\t\t\t\t\tkey={IdNum.id}\r\n\t\t\t\t\t\t\t_id={IdNum._id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>chef not found</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t// Render a list of restaurants based on an array of restaurant IDs\r\n\t\t\t\t<div id=\"chef-restaurants\">\r\n\t\t\t\t\t{IdNum?.restaurant?.map((chef: ObjectId) => {\r\n\t\t\t\t\t\tconsole.log(chef);\r\n\t\t\t\t\t\tconst data = restaurantsData.filter(\r\n\t\t\t\t\t\t\t(rest: IRestaurants) => rest._id === chef\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (data.length === 0) {\r\n\t\t\t\t\t\t\treturn null; // or some other fallback if there are no matching restaurants\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn data.map((restData: IRestaurants) => (\r\n\t\t\t\t\t\t\t<RestaurantCard\r\n\t\t\t\t\t\t\t\timg={restData.img}\r\n\t\t\t\t\t\t\t\tname={restData.name}\r\n\t\t\t\t\t\t\t\tchef={restData.chef}\r\n\t\t\t\t\t\t\t\trating={restData.rating}\r\n\t\t\t\t\t\t\t\ttitle={'chef-rest-page'}\r\n\t\t\t\t\t\t\t\tid={restData.id}\r\n\t\t\t\t\t\t\t\ttitleStar={'restautant-page-stars'}\r\n\t\t\t\t\t\t\t\ttitleImg={'chef-rest-image'}\r\n\t\t\t\t\t\t\t\tkey={restData.id}\r\n\t\t\t\t\t\t\t\t_id={restData._id}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default OneChef;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}