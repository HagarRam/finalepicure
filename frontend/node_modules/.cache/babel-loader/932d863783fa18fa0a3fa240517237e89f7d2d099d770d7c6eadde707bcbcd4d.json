{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hagar\\\\bootcamp\\\\finalepicure\\\\frontend\\\\src\\\\components\\\\AddRest\\\\AddRest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRest = props => {\n  _s();\n  const [inputValues, setInputValues] = useState({});\n  const restDetails = [{\n    id: 'name-input',\n    placeholder: 'Enter restaurant name',\n    type: 'text',\n    title: 'Restaurant Name',\n    name: 'rest-name'\n  }, {\n    id: 'chef-input',\n    placeholder: 'Enter chef name',\n    type: 'text',\n    title: 'Chef Name',\n    name: 'chef-name'\n  }, {\n    id: 'open-hours-input',\n    placeholder: 'Enter open hours',\n    type: 'text',\n    title: 'Open Hours',\n    name: 'open-hours'\n  }, {\n    id: 'address-input',\n    placeholder: 'Enter restaurant address',\n    type: 'text',\n    title: 'Address',\n    name: 'Address'\n  }, {\n    id: 'open-days-input',\n    placeholder: 'Enter open days',\n    type: 'text',\n    title: 'Open Days',\n    name: 'open-days'\n  }, {\n    id: 'open-year-input',\n    placeholder: 'Enter open year',\n    type: 'text',\n    title: 'Open Year',\n    name: 'open-years'\n  }, {\n    id: 'img-input',\n    placeholder: 'Enter image URL',\n    type: 'text',\n    title: 'Image',\n    name: 'img'\n  }, {\n    id: 'dishes-input',\n    placeholder: 'Enter dishes',\n    type: 'text',\n    title: 'Dishes',\n    name: 'dishes'\n  }, {\n    id: 'rating-input',\n    placeholder: 'Enter rating',\n    type: 'text',\n    title: 'Rating',\n    name: 'rating'\n  }];\n  const inputRefs = useRef({});\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputValues(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n  };\n  const renderInputs = inputFields => {\n    return inputFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"input-container\",\n      children: [field.title && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input-title\",\n        children: field.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: field.id,\n        placeholder: field.placeholder,\n        type: field.type,\n        name: field.name,\n        ref: input => inputRefs.current[field.name] = input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this));\n  };\n\n  // const postInformation = () => {\n  // \treturn comment;\n  // \t//to come back!!\n  // };\n\n  const handSaveRest = async e => {\n    e.preventDefault();\n    const credentials = {\n      id: 0,\n      name: '',\n      address: [],\n      chef: '',\n      chefId: 0,\n      openHours: [],\n      openDays: [],\n      openYear: 0,\n      img: '',\n      dishes: [],\n      rating: 0,\n      popular: '',\n      newRest: '',\n      openNow: ''\n    };\n    const inputObj = e.target;\n    console.log(credentials);\n    Object.values(inputObj).forEach(obj => {\n      switch (obj.name) {\n        case 'rating':\n          credentials[obj.name] = Number(obj.value);\n          break;\n        case 'rest-name':\n        case 'chef-name':\n        case 'img':\n        case 'Address':\n          // credentials[obj.name] = String(obj.value);\n          // break;\n          credentials[obj.name] = obj.value.split(',').map(String);\n          break;\n        case 'dishes':\n        case 'open-years':\n        case 'open-days':\n        case 'open-hours':\n          credentials[obj.name] = obj.value.split(',').map(Number);\n          break;\n        default:\n          credentials[obj.name] = obj.value;\n          break;\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurants-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"restaurants-card-Modal\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"closeButton\",\n          onClick: () => props.closeButton(),\n          className: \"close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rest-information\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"details-information\",\n              children: renderInputs(restDetails)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handSaveRest,\n            id: \"add-rest-butoon\",\n            type: \"submit\",\n            children: \"ADD RESTAURANT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 3\n  }, this);\n};\n_s(AddRest, \"vqkH5D91ibVbJ3MnsMOVhtwVUAs=\");\n_c = AddRest;\nexport default AddRest;\nvar _c;\n$RefreshReg$(_c, \"AddRest\");","map":{"version":3,"names":["React","useState","useRef","AddRest","props","inputValues","setInputValues","restDetails","id","placeholder","type","title","name","inputRefs","handleInputChange","event","value","target","prevValues","renderInputs","inputFields","map","field","input","current","handSaveRest","e","preventDefault","credentials","address","chef","chefId","openHours","openDays","openYear","img","dishes","rating","popular","newRest","openNow","inputObj","console","log","Object","values","forEach","obj","Number","split","String","closeButton"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/components/AddRest/AddRest.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Rootstate } from '../../store/store';\r\nimport { IRestaurants } from '../RestaurantPage/RestaurantPage';\r\n\r\ninterface IModal {\r\n\tcloseButton: Function;\r\n}\r\n\r\nconst AddRest: React.FC<IModal> = (props: IModal) => {\r\n\tconst [inputValues, setInputValues] = useState({});\r\n\tinterface InputField {\r\n\t\tid: string;\r\n\t\tplaceholder: string;\r\n\t\ttype: string;\r\n\t\ttitle?: string;\r\n\t\tname: string;\r\n\t}\r\n\tconst restDetails: InputField[] = [\r\n\t\t{\r\n\t\t\tid: 'name-input',\r\n\t\t\tplaceholder: 'Enter restaurant name',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Restaurant Name',\r\n\t\t\tname: 'rest-name',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'chef-input',\r\n\t\t\tplaceholder: 'Enter chef name',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Chef Name',\r\n\t\t\tname: 'chef-name',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'open-hours-input',\r\n\t\t\tplaceholder: 'Enter open hours',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Open Hours',\r\n\t\t\tname: 'open-hours',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'address-input',\r\n\t\t\tplaceholder: 'Enter restaurant address',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Address',\r\n\t\t\tname: 'Address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'open-days-input',\r\n\t\t\tplaceholder: 'Enter open days',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Open Days',\r\n\t\t\tname: 'open-days',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'open-year-input',\r\n\t\t\tplaceholder: 'Enter open year',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Open Year',\r\n\t\t\tname: 'open-years',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'img-input',\r\n\t\t\tplaceholder: 'Enter image URL',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Image',\r\n\t\t\tname: 'img',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'dishes-input',\r\n\t\t\tplaceholder: 'Enter dishes',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Dishes',\r\n\t\t\tname: 'dishes',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'rating-input',\r\n\t\t\tplaceholder: 'Enter rating',\r\n\t\t\ttype: 'text',\r\n\t\t\ttitle: 'Rating',\r\n\t\t\tname: 'rating',\r\n\t\t},\r\n\t];\r\n\tconst inputRefs = useRef<{ [key: string]: HTMLInputElement | null }>({});\r\n\r\n\tconst handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetInputValues((prevValues) => ({ ...prevValues, [name]: value }));\r\n\t};\r\n\r\n\tconst renderInputs = (inputFields: InputField[]) => {\r\n\t\treturn inputFields.map((field) => (\r\n\t\t\t<div\r\n\t\t\t\tid=\"input-container\"\r\n\t\t\t\tkey={field.id}>\r\n\t\t\t\t{field.title && <div id=\"input-title\">{field.title}</div>}\r\n\t\t\t\t<input\r\n\t\t\t\t\tid={field.id}\r\n\t\t\t\t\tplaceholder={field.placeholder}\r\n\t\t\t\t\ttype={field.type}\r\n\t\t\t\t\tname={field.name}\r\n\t\t\t\t\tref={(input) => (inputRefs.current[field.name] = input)}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\r\n\t// const postInformation = () => {\r\n\t// \treturn comment;\r\n\t// \t//to come back!!\r\n\t// };\r\n\r\n\tconst handSaveRest = async (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tconst credentials: any = {\r\n\t\t\tid: 0,\r\n\t\t\tname: '',\r\n\t\t\taddress: [],\r\n\t\t\tchef: '',\r\n\t\t\tchefId: 0,\r\n\t\t\topenHours: [],\r\n\t\t\topenDays: [],\r\n\t\t\topenYear: 0,\r\n\t\t\timg: '',\r\n\t\t\tdishes: [],\r\n\t\t\trating: 0,\r\n\t\t\tpopular: '',\r\n\t\t\tnewRest: '',\r\n\t\t\topenNow: '',\r\n\t\t};\r\n\t\tconst inputObj = e.target;\r\n\t\tconsole.log(credentials);\r\n\r\n\t\tObject.values(inputObj).forEach((obj: any) => {\r\n\t\t\tswitch (obj.name) {\r\n\t\t\t\tcase 'rating':\r\n\t\t\t\t\tcredentials[obj.name] = Number(obj.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rest-name':\r\n\t\t\t\tcase 'chef-name':\r\n\t\t\t\tcase 'img':\r\n\t\t\t\tcase 'Address':\r\n\t\t\t\t\t// credentials[obj.name] = String(obj.value);\r\n\t\t\t\t\t// break;\r\n\t\t\t\t\tcredentials[obj.name] = obj.value.split(',').map(String);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dishes':\r\n\t\t\t\tcase 'open-years':\r\n\t\t\t\tcase 'open-days':\r\n\t\t\t\tcase 'open-hours':\r\n\t\t\t\t\tcredentials[obj.name] = obj.value.split(',').map(Number);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcredentials[obj.name] = obj.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"restaurants-card\">\r\n\t\t\t<div\r\n\t\t\t\tid=\"restaurants-card-Modal\"\r\n\t\t\t\tclassName=\"modal\">\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tid=\"closeButton\"\r\n\t\t\t\t\t\tonClick={() => props.closeButton()}\r\n\t\t\t\t\t\tclassName=\"close\">\r\n\t\t\t\t\t\t&times;\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className=\"rest-information\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div id=\"details-information\">{renderInputs(restDetails)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={handSaveRest}\r\n\t\t\t\t\t\t\tid=\"add-rest-butoon\"\r\n\t\t\t\t\t\t\ttype=\"submit\">\r\n\t\t\t\t\t\t\tADD RESTAURANT\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddRest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}