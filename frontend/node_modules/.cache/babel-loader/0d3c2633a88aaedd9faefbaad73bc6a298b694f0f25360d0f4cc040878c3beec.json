{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nconst [newDishes, setDishes] = useState([]);\nconst [id, setId] = useState();\nconst [name, setName] = useState('');\nconst [price, setPrice] = useState();\nconst [quantity, setQuantity] = useState();\nconst [img, setImg] = useState('');\nconst [comment, setComment] = useState(['']);\nconst data = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/dishes/', {\n      method: 'GET'\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\nconst orderDish = async (id, name, price, img, dishtitle, comment, quantity) => {\n  await fetch('http://localhost:8000/dishes/orderdish/', {\n    method: 'POST',\n    body: JSON.stringify({\n      id: id,\n      name: name,\n      price: price,\n      img: img,\n      dishtitle: 'dish-order-card-element',\n      comment: comment,\n      quantity: quantity\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8'\n    }\n  }).then(response => response.json()).then(data => {\n    setDishes(dish => [data, ...dish]);\n    setId('');\n    setName('');\n    setPrice('');\n    setQuantity('');\n    setImg('');\n    setComment('');\n  }).catch(err => {\n    console.log(err.message);\n  });\n};\nconst postData = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/dishes/orderdish/', {\n      method: 'POST'\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\nconst dishes = await data();\nexport const dishesSlice = createSlice({\n  name: 'dishes',\n  initialState: {\n    value: dishes,\n    filteredValue: dishes\n  },\n  reducers: {}\n});\nexport default dishesSlice.reducer;","map":{"version":3,"names":["createSlice","useState","newDishes","setDishes","id","setId","name","setName","price","setPrice","quantity","setQuantity","img","setImg","comment","setComment","data","response","fetch","method","json","console","log","err","orderDish","dishtitle","body","JSON","stringify","headers","then","dish","catch","message","postData","dishes","dishesSlice","initialState","value","filteredValue","reducers","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/dishesSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { useState } from 'react';\r\nimport { IDishes } from '../../components/SignatureDish/DishCard';\r\nconst [newDishes, setDishes] = useState<any>([]);\r\nconst [id, setId] = useState<number>();\r\nconst [name, setName] = useState<string>('');\r\nconst [price, setPrice] = useState<number>();\r\nconst [quantity, setQuantity] = useState<number>();\r\nconst [img, setImg] = useState<string>('');\r\nconst [comment, setComment] = useState<string[]>(['']);\r\n\r\nconst data = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/dishes/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\n\r\nconst orderDish = async (\r\n\tid: any,\r\n\tname: any,\r\n\tprice: any,\r\n\timg: any,\r\n\tdishtitle: any,\r\n\tcomment: any,\r\n\tquantity: any\r\n) => {\r\n\tawait fetch('http://localhost:8000/dishes/orderdish/', {\r\n\t\tmethod: 'POST',\r\n\t\tbody: JSON.stringify({\r\n\t\t\tid: id,\r\n\t\t\tname: name,\r\n\t\t\tprice: price,\r\n\t\t\timg: img,\r\n\t\t\tdishtitle: 'dish-order-card-element',\r\n\t\t\tcomment: comment,\r\n\t\t\tquantity: quantity,\r\n\t\t}),\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json; charset=UTF-8',\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => {\r\n\t\t\tsetDishes((dish: any) => [data, ...dish]);\r\n\t\t\tsetId('');\r\n\t\t\tsetName('');\r\n\t\t\tsetPrice('');\r\n\t\t\tsetQuantity('');\r\n\t\t\tsetImg('');\r\n\t\t\tsetComment('');\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err.message);\r\n\t\t});\r\n};\r\n\r\nconst postData = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/dishes/orderdish/', {\r\n\t\t\tmethod: 'POST',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\nconst dishes: IDishes[] = await data();\r\n\r\nexport const dishesSlice = createSlice({\r\n\tname: 'dishes',\r\n\tinitialState: {\r\n\t\tvalue: dishes,\r\n\t\tfilteredValue: dishes,\r\n\t},\r\n\treducers: {},\r\n});\r\n\r\nexport default dishesSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}