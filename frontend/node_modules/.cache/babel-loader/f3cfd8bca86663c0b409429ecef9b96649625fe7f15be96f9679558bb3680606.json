{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nconst [newDishes, setDishes] = useState([]);\nconst data = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/dishes/', {\n      method: 'GET'\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\n\n// const orderDish = async (first: any, last: any, email:any, password:any) => {\n//     await fetch(\"http://localhost:8000/api/studant\", {\n//       method: \"POST\",\n//       body: JSON.stringify({\n//         first: first,\n//         last: last,\n//         email:email,\n//         password:password,\n//       }),\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\",\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setStudants((studansts: any) => [data, ...studansts]);\n//         // setFirst(\"\");\n//         // setLast(\"\");\n//       })\n//       .catch((err) => {\n//         console.log(err.message);\n//       });\n//   };\n\nconst postData = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/dishes/orderdish/', {\n      method: 'POST'\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\nconst dishes = await data();\nexport const dishesSlice = createSlice({\n  name: 'dishes',\n  initialState: {\n    value: dishes,\n    filteredValue: dishes\n  },\n  reducers: {}\n});\nexport default dishesSlice.reducer;","map":{"version":3,"names":["createSlice","useState","newDishes","setDishes","data","response","fetch","method","json","console","log","err","postData","dishes","dishesSlice","name","initialState","value","filteredValue","reducers","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/dishesSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { useState } from 'react';\r\nimport { IDishes } from '../../components/SignatureDish/DishCard';\r\nconst [newDishes, setDishes] = useState<any>([]);\r\nconst data = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/dishes/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\n\r\n// const orderDish = async (first: any, last: any, email:any, password:any) => {\r\n//     await fetch(\"http://localhost:8000/api/studant\", {\r\n//       method: \"POST\",\r\n//       body: JSON.stringify({\r\n//         first: first,\r\n//         last: last,\r\n//         email:email,\r\n//         password:password,\r\n//       }),\r\n//       headers: {\r\n//         \"Content-type\": \"application/json; charset=UTF-8\",\r\n//       },\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setStudants((studansts: any) => [data, ...studansts]);\r\n//         // setFirst(\"\");\r\n//         // setLast(\"\");\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err.message);\r\n//       });\r\n//   };\r\n\r\nconst postData = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/dishes/orderdish/', {\r\n\t\t\tmethod: 'POST',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\nconst dishes: IDishes[] = await data();\r\n\r\nexport const dishesSlice = createSlice({\r\n\tname: 'dishes',\r\n\tinitialState: {\r\n\t\tvalue: dishes,\r\n\t\tfilteredValue: dishes,\r\n\t},\r\n\treducers: {},\r\n});\r\n\r\nexport default dishesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAEhC,MAAM,CAACC,SAAS,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAM,EAAE,CAAC;AAChD,MAAMG,IAAI,GAAG,YAAY;EACxB,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC7DC,MAAM,EAAE;IACT,CAAC,CAAC;IACF,MAAMH,IAAI,GAAG,MAAMC,QAAQ,CAACG,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAOA,IAAI;EACZ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACbF,OAAO,CAACC,GAAG,EAAE;EACd;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,QAAQ,GAAG,YAAY;EAC5B,IAAI;IACH,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACvEC,MAAM,EAAE;IACT,CAAC,CAAC;IACF,MAAMH,IAAI,GAAG,MAAMC,QAAQ,CAACG,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAOA,IAAI;EACZ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACbF,OAAO,CAACC,GAAG,EAAE;EACd;AACD,CAAC;AACD,MAAMG,MAAiB,GAAG,MAAMT,IAAI,EAAE;AAEtC,OAAO,MAAMU,WAAW,GAAGd,WAAW,CAAC;EACtCe,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACbC,KAAK,EAAEJ,MAAM;IACbK,aAAa,EAAEL;EAChB,CAAC;EACDM,QAAQ,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,eAAeL,WAAW,CAACM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}