{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst datausers = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/users/', {\n      method: 'GET'\n    });\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\nconst users = await datausers();\nconsole.log(users);\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    value: users,\n    filteredValue: users\n  },\n  reducers: {\n    setAllUsers: state => {\n      state.filteredValue = state.value;\n    }\n  }\n});\nexport const {\n  setAllUsers\n} = userSlice.actions;\nexport default userSlice.reducer;\n\n// const createUser = async () => {\n// \ttry {\n// \t\tconst response = await fetch('http://localhost:8000/users/', {\n// \t\t\tmethod: 'POST',\n// \t\t});\n// \t\tconst data = await response.json();\n// \t\tconsole.log(data);\n// \t\treturn data;\n// \t} catch (err) {\n// \t\tconsole.log();\n// \t}\n// };","map":{"version":3,"names":["createSlice","datausers","response","fetch","method","data","json","err","console","log","users","userSlice","name","initialState","value","filteredValue","reducers","setAllUsers","state","actions","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/usersSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nexport interface IUser {\r\n\tfirst_name: string;\r\n\tlast_name: string;\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nconst datausers = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/users/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\nconst users: IUser[] = await datausers();\r\nconsole.log(users);\r\nexport const userSlice = createSlice({\r\n\tname: 'users',\r\n\tinitialState: {\r\n\t\tvalue: users,\r\n\t\tfilteredValue: users,\r\n\t},\r\n\treducers: {\r\n\t\tsetAllUsers: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setAllUsers } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\n// const createUser = async () => {\r\n// \ttry {\r\n// \t\tconst response = await fetch('http://localhost:8000/users/', {\r\n// \t\t\tmethod: 'POST',\r\n// \t\t});\r\n// \t\tconst data = await response.json();\r\n// \t\tconsole.log(data);\r\n// \t\treturn data;\r\n// \t} catch (err) {\r\n// \t\tconsole.log();\r\n// \t}\r\n// };\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAQ9C,MAAMC,SAAS,GAAG,YAAY;EAC7B,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC5DC,MAAM,EAAE;IACT,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;IAClC,OAAOD,IAAI;EACZ,CAAC,CAAC,OAAOE,GAAG,EAAE;IACbC,OAAO,CAACC,GAAG,EAAE;EACd;AACD,CAAC;AACD,MAAMC,KAAc,GAAG,MAAMT,SAAS,EAAE;AACxCO,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;AAClB,OAAO,MAAMC,SAAS,GAAGX,WAAW,CAAC;EACpCY,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACbC,KAAK,EAAEJ,KAAK;IACZK,aAAa,EAAEL;EAChB,CAAC;EACDM,QAAQ,EAAE;IACTC,WAAW,EAAGC,KAAK,IAAK;MACvBA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK;IAClC;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG;AAAY,CAAC,GAAGN,SAAS,CAACQ,OAAO;AAEhD,eAAeR,SAAS,CAACS,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}