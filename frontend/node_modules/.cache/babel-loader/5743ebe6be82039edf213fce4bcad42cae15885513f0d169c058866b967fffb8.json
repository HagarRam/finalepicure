{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nconst [newDishes, setDishes] = useState([]);\nconst [id, setId] = useState();\nconst [name, setName] = useState('');\nconst [price, setPrice] = useState();\nconst [img, setImg] = useState('');\nconst [comment, setComment] = useState(['']);\nconst data = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/dishes/', {\n      method: 'GET'\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\n// id={0}\n// name={SignatureDishData[1].name}\n// price={SignatureDishData[1].price}\n// img={SignatureDishData[1].img}\n// dishtitle={'dish-order-card-element'}\n// comment={'no spicy'}\n// quantity={5}\n\n// const orderDish = async (id:any, name:any, price:any, img:any, dishtitle:any, comment:any, quantity:any) => {\n//     await fetch('http://localhost:8000/dishes/orderdish/', {\n//       method: \"POST\",\n//       body: JSON.stringify({\n// // id: id\n// name:name\n// price:price\n// img:img\n// dishtitle={'dish-order-card-element'}\n// comment:comment\n// quantity: quantity\n//       }),\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\",\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setDishes((dish: any) => [data, ...dish]);\n//         // setFirst(\"\");\n//         // setLast(\"\");\n//       })\n//       .catch((err) => {\n//         console.log(err.message);\n//       });\n//   };\n\nconst postData = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/dishes/orderdish/', {\n      method: 'POST'\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\nconst dishes = await data();\nexport const dishesSlice = createSlice({\n  name: 'dishes',\n  initialState: {\n    value: dishes,\n    filteredValue: dishes\n  },\n  reducers: {}\n});\nexport default dishesSlice.reducer;","map":{"version":3,"names":["createSlice","useState","newDishes","setDishes","id","setId","name","setName","price","setPrice","img","setImg","comment","setComment","data","response","fetch","method","json","console","log","err","postData","dishes","dishesSlice","initialState","value","filteredValue","reducers","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/dishesSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { useState } from 'react';\r\nimport { IDishes } from '../../components/SignatureDish/DishCard';\r\nconst [newDishes, setDishes] = useState<any>([]);\r\nconst [id, setId] = useState<number>();\r\nconst [name, setName] = useState<string>('');\r\nconst [price, setPrice] = useState<number>();\r\nconst [img, setImg] = useState<string>('');\r\nconst [comment, setComment] = useState<string[]>(['']);\r\n\r\nconst data = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/dishes/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\n// id={0}\r\n// name={SignatureDishData[1].name}\r\n// price={SignatureDishData[1].price}\r\n// img={SignatureDishData[1].img}\r\n// dishtitle={'dish-order-card-element'}\r\n// comment={'no spicy'}\r\n// quantity={5}\r\n\r\n// const orderDish = async (id:any, name:any, price:any, img:any, dishtitle:any, comment:any, quantity:any) => {\r\n//     await fetch('http://localhost:8000/dishes/orderdish/', {\r\n//       method: \"POST\",\r\n//       body: JSON.stringify({\r\n// // id: id\r\n// name:name\r\n// price:price\r\n// img:img\r\n// dishtitle={'dish-order-card-element'}\r\n// comment:comment\r\n// quantity: quantity\r\n//       }),\r\n//       headers: {\r\n//         \"Content-type\": \"application/json; charset=UTF-8\",\r\n//       },\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setDishes((dish: any) => [data, ...dish]);\r\n//         // setFirst(\"\");\r\n//         // setLast(\"\");\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err.message);\r\n//       });\r\n//   };\r\n\r\nconst postData = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/dishes/orderdish/', {\r\n\t\t\tmethod: 'POST',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\nconst dishes: IDishes[] = await data();\r\n\r\nexport const dishesSlice = createSlice({\r\n\tname: 'dishes',\r\n\tinitialState: {\r\n\t\tvalue: dishes,\r\n\t\tfilteredValue: dishes,\r\n\t},\r\n\treducers: {},\r\n});\r\n\r\nexport default dishesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAEhC,MAAM,CAACC,SAAS,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAM,EAAE,CAAC;AAChD,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGJ,QAAQ,EAAU;AACtC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;AAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,EAAU;AAC5C,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;AAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAW,CAAC,EAAE,CAAC,CAAC;AAEtD,MAAMa,IAAI,GAAG,YAAY;EACxB,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC7DC,MAAM,EAAE;IACT,CAAC,CAAC;IACF,MAAMH,IAAI,GAAG,MAAMC,QAAQ,CAACG,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAOA,IAAI;EACZ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACbF,OAAO,CAACC,GAAG,EAAE;EACd;AACD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,QAAQ,GAAG,YAAY;EAC5B,IAAI;IACH,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACvEC,MAAM,EAAE;IACT,CAAC,CAAC;IACF,MAAMH,IAAI,GAAG,MAAMC,QAAQ,CAACG,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAOA,IAAI;EACZ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACbF,OAAO,CAACC,GAAG,EAAE;EACd;AACD,CAAC;AACD,MAAMG,MAAiB,GAAG,MAAMT,IAAI,EAAE;AAEtC,OAAO,MAAMU,WAAW,GAAGxB,WAAW,CAAC;EACtCM,IAAI,EAAE,QAAQ;EACdmB,YAAY,EAAE;IACbC,KAAK,EAAEH,MAAM;IACbI,aAAa,EAAEJ;EAChB,CAAC;EACDK,QAAQ,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,eAAeJ,WAAW,CAACK,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}