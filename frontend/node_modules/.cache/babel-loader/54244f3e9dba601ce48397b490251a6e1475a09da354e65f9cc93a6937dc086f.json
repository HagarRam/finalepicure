{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst data = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/restaurant/', {\n      method: 'GET'\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log();\n  }\n};\nconst rest = await data();\nexport const restaurantsSlice = createSlice({\n  name: 'restaurants',\n  initialState: {\n    value: rest,\n    filteredValue: rest\n  },\n  reducers: {\n    setAllRestuarants: state => {\n      state.filteredValue = state.value;\n    },\n    setPopularRestuarants: state => {\n      state.filteredValue = [...state.value].sort((a, b) => b.views - a.views);\n    },\n    setNewRestuarants: state => {\n      state.filteredValue = state.value.filter(restaurant => restaurant.newRest === true);\n    },\n    setOpenNow: (state, action) => {\n      state.filteredValue = action.payload;\n    },\n    setMap: state => {\n      state.filteredValue = state.value;\n    },\n    removeRest: (state, action) => {\n      state.filteredValue = action.payload;\n      state.value = action.payload;\n    }\n  }\n});\nexport const {\n  setAllRestuarants,\n  setOpenNow,\n  setMap,\n  setPopularRestuarants,\n  setNewRestuarants,\n  removeRest\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","data","response","fetch","method","json","console","log","err","rest","restaurantsSlice","name","initialState","value","filteredValue","reducers","setAllRestuarants","state","setPopularRestuarants","sort","a","b","views","setNewRestuarants","filter","restaurant","newRest","setOpenNow","action","payload","setMap","removeRest","actions","reducer"],"sources":["C:/Users/hagar/bootcamp/finalepicure/frontend/src/store/slices/restaurantsSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n\tIRestaurants,\r\n\tIrestaurantsState,\r\n} from '../../components/RestaurantPage/RestaurantPage';\r\nconst data = async () => {\r\n\ttry {\r\n\t\tconst response = await fetch('http://localhost:8000/restaurant/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t\tconst data = await response.json();\r\n\t\tconsole.log(data);\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\tconsole.log();\r\n\t}\r\n};\r\nconst rest: IRestaurants[] = await data();\r\nexport const restaurantsSlice = createSlice({\r\n\tname: 'restaurants',\r\n\tinitialState: {\r\n\t\tvalue: rest,\r\n\t\tfilteredValue: rest,\r\n\t},\r\n\treducers: {\r\n\t\tsetAllRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t\tsetPopularRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = [...state.value].sort(\r\n\t\t\t\t(a: any, b: any) => b.views - a.views\r\n\t\t\t);\r\n\t\t},\r\n\t\tsetNewRestuarants: (state) => {\r\n\t\t\tstate.filteredValue = state.value.filter(\r\n\t\t\t\t(restaurant: any) => restaurant.newRest === true\r\n\t\t\t);\r\n\t\t},\r\n\t\tsetOpenNow: (state, action) => {\r\n\t\t\tstate.filteredValue = action.payload;\r\n\t\t},\r\n\t\tsetMap: (state) => {\r\n\t\t\tstate.filteredValue = state.value;\r\n\t\t},\r\n\t\tremoveRest: (state, action) => {\r\n\t\t\tstate.filteredValue = action.payload;\r\n\t\t\tstate.value = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tsetAllRestuarants,\r\n\tsetOpenNow,\r\n\tsetMap,\r\n\tsetPopularRestuarants,\r\n\tsetNewRestuarants,\r\n\tremoveRest,\r\n} = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAK9C,MAAMC,IAAI,GAAG,YAAY;EACxB,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MACjEC,MAAM,EAAE;IACT,CAAC,CAAC;IACF,MAAMH,IAAI,GAAG,MAAMC,QAAQ,CAACG,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAOA,IAAI;EACZ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACbF,OAAO,CAACC,GAAG,EAAE;EACd;AACD,CAAC;AACD,MAAME,IAAoB,GAAG,MAAMR,IAAI,EAAE;AACzC,OAAO,MAAMS,gBAAgB,GAAGV,WAAW,CAAC;EAC3CW,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACbC,KAAK,EAAEJ,IAAI;IACXK,aAAa,EAAEL;EAChB,CAAC;EACDM,QAAQ,EAAE;IACTC,iBAAiB,EAAGC,KAAK,IAAK;MAC7BA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK;IAClC,CAAC;IACDK,qBAAqB,EAAGD,KAAK,IAAK;MACjCA,KAAK,CAACH,aAAa,GAAG,CAAC,GAAGG,KAAK,CAACJ,KAAK,CAAC,CAACM,IAAI,CAC1C,CAACC,CAAM,EAAEC,CAAM,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CACrC;IACF,CAAC;IACDC,iBAAiB,EAAGN,KAAK,IAAK;MAC7BA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK,CAACW,MAAM,CACtCC,UAAe,IAAKA,UAAU,CAACC,OAAO,KAAK,IAAI,CAChD;IACF,CAAC;IACDC,UAAU,EAAE,CAACV,KAAK,EAAEW,MAAM,KAAK;MAC9BX,KAAK,CAACH,aAAa,GAAGc,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,MAAM,EAAGb,KAAK,IAAK;MAClBA,KAAK,CAACH,aAAa,GAAGG,KAAK,CAACJ,KAAK;IAClC,CAAC;IACDkB,UAAU,EAAE,CAACd,KAAK,EAAEW,MAAM,KAAK;MAC9BX,KAAK,CAACH,aAAa,GAAGc,MAAM,CAACC,OAAO;MACpCZ,KAAK,CAACJ,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC7B;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EACZb,iBAAiB;EACjBW,UAAU;EACVG,MAAM;EACNZ,qBAAqB;EACrBK,iBAAiB;EACjBQ;AACD,CAAC,GAAGrB,gBAAgB,CAACsB,OAAO;AAE5B,eAAetB,gBAAgB,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}